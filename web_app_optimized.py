import streamlit as st
import pandas as pd
import sqlite3
import json
import plotly.express as px
import plotly.graph_objects as go
from datetime import datetime, timedelta
import subprocess
import sys
import os
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="MUZAQUEST Analytics Dashboard",
    page_icon="üéØ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
st.markdown("""
<style>
    .main-header {
        font-size: 3rem;
        color: #1f77b4;
        text-align: center;
        margin-bottom: 2rem;
    }
    .metric-card {
        background-color: #f0f2f6;
        padding: 1rem;
        border-radius: 0.5rem;
        margin: 0.5rem 0;
    }
    .success-metric {
        background-color: #d4edda;
        border-left: 4px solid #28a745;
    }
    .warning-metric {
        background-color: #fff3cd;
        border-left: 4px solid #ffc107;
    }
    .danger-metric {
        background-color: #f8d7da;
        border-left: 4px solid #dc3545;
    }
    .insight-box {
        background-color: #e3f2fd;
        border-left: 4px solid #2196f3;
        padding: 1rem;
        margin: 1rem 0;
        border-radius: 0 0.5rem 0.5rem 0;
    }
</style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown('<h1 class="main-header">üéØ MUZAQUEST Analytics Dashboard</h1>', unsafe_allow_html=True)
st.markdown('<p style="text-align: center; font-size: 1.2rem; color: #666;">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ë–∞–ª–∏ ‚Ä¢ AI-Powered ‚Ä¢ Real-time</p>', unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
@st.cache_data
def load_restaurants():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤"""
    try:
        conn = sqlite3.connect('database.sqlite')
        query = """
        SELECT DISTINCT restaurant_name 
        FROM grab_stats 
        UNION 
        SELECT DISTINCT restaurant_name 
        FROM gojek_stats 
        ORDER BY restaurant_name
        """
        restaurants = pd.read_sql_query(query, conn)
        conn.close()
        return restaurants['restaurant_name'].tolist()
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤: {e}")
        return []

@st.cache_data
def get_market_overview():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–∑–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ä—ã–Ω–∫—É"""
    try:
        conn = sqlite3.connect('database.sqlite')
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        grab_query = "SELECT SUM(sales) as total_sales, COUNT(DISTINCT restaurant_name) as restaurants FROM grab_stats"
        gojek_query = "SELECT SUM(sales) as total_sales, COUNT(DISTINCT restaurant_name) as restaurants FROM gojek_stats"
        
        grab_data = pd.read_sql_query(grab_query, conn)
        gojek_data = pd.read_sql_query(gojek_query, conn)
        
        conn.close()
        
        total_sales = (grab_data['total_sales'].iloc[0] or 0) + (gojek_data['total_sales'].iloc[0] or 0)
        total_restaurants = max(grab_data['restaurants'].iloc[0] or 0, gojek_data['restaurants'].iloc[0] or 0)
        
        return {
            'total_sales': total_sales,
            'total_restaurants': total_restaurants,
            'avg_sales_per_restaurant': total_sales / total_restaurants if total_restaurants > 0 else 0
        }
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–∑–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return {'total_sales': 0, 'total_restaurants': 0, 'avg_sales_per_restaurant': 0}

@st.cache_data
def load_recent_reports():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç—á–µ—Ç–æ–≤"""
    reports_dir = Path("reports")
    if reports_dir.exists():
        report_files = list(reports_dir.glob("*.txt"))
        if report_files:
            report_files.sort(key=lambda x: x.stat().st_mtime, reverse=True)
            return report_files[:5]
    return []

def run_analysis(restaurant_name=None, start_date=None, end_date=None):
    """–ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ —á–µ—Ä–µ–∑ main.py"""
    try:
        cmd = [sys.executable, 'main.py', 'analyze']
        
        if restaurant_name:
            cmd.append(f'"{restaurant_name}"')
        else:
            cmd.append('market')
            
        if start_date and end_date:
            cmd.extend(['--start-date', start_date, '--end-date', end_date])
            
        # –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
        result = subprocess.run(cmd, capture_output=True, text=True, timeout=600)  # –£–≤–µ–ª–∏—á–µ–Ω timeout
        
        if result.returncode == 0:
            return result.stdout
        else:
            return f"–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {result.stderr}"
            
    except subprocess.TimeoutExpired:
        return "–ê–Ω–∞–ª–∏–∑ –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ (10 –º–∏–Ω—É—Ç)"
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}"

def ask_ai_question(question, context=""):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ AI –≤–æ–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –¥–∞–Ω–Ω—ã—Ö"""
    try:
        from ai_query_processor import AIQueryProcessor
        processor = AIQueryProcessor()
        return processor.process_query(question, context)
    except ImportError:
        # Fallback –µ—Å–ª–∏ –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        return f"""
‚ùå **–ú–æ–¥—É–ª—å AI –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω**

–î–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã AI –ø–æ–º–æ—â–Ω–∏–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º —Ñ–∞–π–ª `ai_query_processor.py`.

**–í–∞—à –≤–æ–ø—Ä–æ—Å:** {question}

**–ß—Ç–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ AI –ø–æ–º–æ—â–Ω–∏–∫–∞:**
- üìä –î–∞–Ω–Ω—ã–µ –ª—é–±–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
- üå§Ô∏è –ü–æ–≥–æ–¥–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∏ –≤–ª–∏—è–Ω–∏–µ
- üéâ –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö 35 –±–∞–ª–∏–π—Å–∫–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
- üåç –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
- ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ ML –º–æ–¥–µ–ª–∏ –∏ —Ñ–∞–∫—Ç–æ—Ä–∞—Ö
- üìç GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ –∑–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
- ‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤

üí° **–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å:**
- "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π Ika Canggu"
- "–ö–∞–∫ –¥–æ–∂–¥—å –≤–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏?"
- "–ü–æ–∫–∞–∂–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—É—Ä–∏—Å—Ç–æ–≤"
"""
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ AI –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}"

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
st.sidebar.markdown("## üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏—è")
page = st.sidebar.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
    [
        "üè† –ì–ª–∞–≤–Ω–∞—è",
        "üè™ –ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞", 
        "üè¢ –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞",
        "üí¨ AI –ü–æ–º–æ—â–Ω–∏–∫"
    ]
)

# ===== –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê =====
if page == "üè† –ì–ª–∞–≤–Ω–∞—è":
    st.markdown("## üìä –û–±–∑–æ—Ä —Ä—ã–Ω–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ë–∞–ª–∏")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    market_data = get_market_overview()
    restaurants = load_restaurants()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric(
            "üè™ –†–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤", 
            f"{market_data['total_restaurants']}"
        )
    
    with col2:
        sales_millions = market_data['total_sales'] / 1_000_000
        st.metric(
            "üí∞ –û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏", 
            f"{sales_millions:.1f}M IDR"
        )
    
    with col3:
        avg_millions = market_data['avg_sales_per_restaurant'] / 1_000_000
        st.metric(
            "üìä –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏", 
            f"{avg_millions:.1f}M IDR"
        )
    
    with col4:
        st.metric(
            "ü§ñ AI –ê–Ω–∞–ª–∏–∑–æ–≤", 
            f"{len(load_recent_reports())}"
        )
    
    st.markdown("---")
    
    # –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("### üîß –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
        st.markdown('<div class="metric-card success-metric"><b>‚úÖ ML-–º–æ–¥–µ–ª—å –∞–∫—Ç–∏–≤–Ω–∞</b><br>RandomForest R¬≤ = 85%</div>', unsafe_allow_html=True)
        st.markdown('<div class="metric-card success-metric"><b>‚úÖ –ü–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</b><br>Open-Meteo API (59 –ª–æ–∫–∞—Ü–∏–π)</div>', unsafe_allow_html=True)
        st.markdown('<div class="metric-card success-metric"><b>‚úÖ –ë–∞–ª–∏–π—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏</b><br>35 —Ç–∏–ø–æ–≤ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –∞–∫—Ç–∏–≤–Ω—ã</div>', unsafe_allow_html=True)
        st.markdown('<div class="metric-card success-metric"><b>‚úÖ AI-–∞–Ω–∞–ª–∏–∑</b><br>OpenAI GPT-4 –≥–æ—Ç–æ–≤</div>', unsafe_allow_html=True)
    
    with col2:
        st.markdown("### üìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–Ω–∞–ª–∏–∑—ã")
        recent_reports = load_recent_reports()
        
        if recent_reports:
            for report_file in recent_reports:
                modified_time = datetime.fromtimestamp(report_file.stat().st_mtime)
                restaurant_name = report_file.name.split('_')[0] if '_' in report_file.name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
                st.markdown(f"""
                <div class="metric-card">
                    <b>üìÑ {restaurant_name}</b><br>
                    <small>{modified_time.strftime('%d.%m.%Y %H:%M')}</small>
                </div>
                """, unsafe_allow_html=True)
        else:
            st.info("–ê–Ω–∞–ª–∏–∑—ã –µ—â–µ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏—Å—å. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –æ—Ç—á–µ—Ç!")
    
    # –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    st.markdown("### üöÄ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
    
    quick_col1, quick_col2, quick_col3 = st.columns(3)
    
    with quick_col1:
        if st.button("üè™ –ê–Ω–∞–ª–∏–∑ –ª—É—á—à–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞", type="secondary"):
            st.switch_page("üè™ –ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞")
    
    with quick_col2:
        if st.button("üè¢ –†—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑", type="secondary"):
            st.switch_page("üè¢ –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞")
    
    with quick_col3:
        if st.button("üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å AI", type="secondary"):
            st.switch_page("üí¨ AI –ü–æ–º–æ—â–Ω–∏–∫")

# ===== –ê–ù–ê–õ–ò–ó –û–¢–î–ï–õ–¨–ù–û–ì–û –†–ï–°–¢–û–†–ê–ù–ê =====
elif page == "üè™ –ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞":
    st.markdown("## üè™ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞")
    
    restaurants = load_restaurants()
    
    if not restaurants:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤")
        st.stop()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    st.sidebar.markdown("### ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞")
    
    # –í—ã–±–æ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
    selected_restaurant = st.sidebar.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω:",
        restaurants,
        index=0,
        help="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"
    )
    
    # –í—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞
    period_type = st.sidebar.selectbox(
        "–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞:",
        ["–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π", "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π", "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞", "–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥"],
        index=2,  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 3 –º–µ—Å—è—Ü–∞
        help="–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"
    )
    
    if period_type == "–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥":
        date_range = st.sidebar.date_input(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:",
            value=(datetime.now() - timedelta(days=90), datetime.now()),
            max_value=datetime.now(),
            help="–£–∫–∞–∂–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é –∏ –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—ã"
        )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
    st.sidebar.markdown("### üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏")
    include_ml = st.sidebar.checkbox("ü§ñ ML-–ø—Ä–æ–≥–Ω–æ–∑—ã –∏ SHAP –∞–Ω–∞–ª–∏–∑", value=True)
    include_weather = st.sidebar.checkbox("üå§Ô∏è –ü–æ–≥–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑", value=True)
    include_holidays = st.sidebar.checkbox("üéâ –ê–Ω–∞–ª–∏–∑ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤", value=True)
    include_tourist = st.sidebar.checkbox("üåç –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ", value=True)
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    st.markdown(f"### üìä –ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞: **{selected_restaurant}**")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
    st.markdown("""
    <div class="insight-box">
        <b>üîç –ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –∞–Ω–∞–ª–∏–∑:</b><br>
        ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏ –∏ —Ç—Ä–µ–Ω–¥—ã<br>
        ‚Ä¢ ML-–¥–µ—Ç–µ–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∞–Ω–æ–º–∞–ª–∏–π<br>
        ‚Ä¢ –í–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –ø–æ GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º<br>
        ‚Ä¢ –í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –±–∞–ª–∏–π—Å–∫–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤<br>
        ‚Ä¢ –¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏<br>
        ‚Ä¢ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
    </div>
    """, unsafe_allow_html=True)
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
    if st.button("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑", type="primary", use_container_width=True):
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞—Ç—ã
        if period_type == "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π":
            start_date = (datetime.now() - timedelta(days=7)).strftime('%Y-%m-%d')
            end_date = datetime.now().strftime('%Y-%m-%d')
        elif period_type == "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π":
            start_date = (datetime.now() - timedelta(days=30)).strftime('%Y-%m-%d')
            end_date = datetime.now().strftime('%Y-%m-%d')
        elif period_type == "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞":
            start_date = (datetime.now() - timedelta(days=90)).strftime('%Y-%m-%d')
            end_date = datetime.now().strftime('%Y-%m-%d')
        else:  # –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥
            if len(date_range) == 2:
                start_date = date_range[0].strftime('%Y-%m-%d')
                end_date = date_range[1].strftime('%Y-%m-%d')
            else:
                st.error("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
                st.stop()
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä –∏ –∞–Ω–∞–ª–∏–∑
        progress_bar = st.progress(0)
        status_text = st.empty()
        
        status_text.text("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞...")
        progress_bar.progress(10)
        
        status_text.text("üìä –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞...")
        progress_bar.progress(30)
        
        status_text.text("ü§ñ –ó–∞–ø—É—Å–∫ ML-–∞–Ω–∞–ª–∏–∑–∞...")
        progress_bar.progress(50)
        
        status_text.text("üå§Ô∏è –ê–Ω–∞–ª–∏–∑ –ø–æ–≥–æ–¥–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤...")
        progress_bar.progress(70)
        
        status_text.text("üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤ –∏ —Å–æ–±—ã—Ç–∏–π...")
        progress_bar.progress(90)
        
        # –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
        result = run_analysis(selected_restaurant, start_date, end_date)
        
        progress_bar.progress(100)
        status_text.text("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        st.markdown("### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞")
        st.text_area("", result, height=600, key="restaurant_result")
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        col1, col2 = st.columns(2)
        
        with col1:
            if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç"):
                timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
                filename = f"reports/{selected_restaurant}_{start_date}_{end_date}_{timestamp}.txt"
                
                os.makedirs("reports", exist_ok=True)
                with open(filename, 'w', encoding='utf-8') as f:
                    f.write(result)
                
                st.success(f"‚úÖ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filename}")
        
        with col2:
            if st.button("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∞–Ω–∞–ª–∏–∑"):
                st.rerun()

# ===== –ê–ù–ê–õ–ò–ó –†–´–ù–ö–ê =====
elif page == "üè¢ –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞":
    st.markdown("## üè¢ –†—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –±–µ–Ω—á–º–∞—Ä–∫–∏–Ω–≥")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    st.sidebar.markdown("### ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞")
    
    # –í—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞
    period_type = st.sidebar.selectbox(
        "–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞:",
        ["–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü", "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–≤–∞—Ä—Ç–∞–ª", "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª–≥–æ–¥–∞", "–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥"],
        index=1,  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∫–≤–∞—Ä—Ç–∞–ª
        help="–ü–µ—Ä–∏–æ–¥ –¥–ª—è —Ä—ã–Ω–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"
    )
    
    if period_type == "–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥":
        date_range = st.sidebar.date_input(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:",
            value=(datetime.now() - timedelta(days=90), datetime.now()),
            max_value=datetime.now(),
            key="market_dates"
        )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
    st.sidebar.markdown("### üîß –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞")
    include_benchmarks = st.sidebar.checkbox("üèÜ –ë–µ–Ω—á–º–∞—Ä–∫–∏–Ω–≥", value=True)
    include_segments = st.sidebar.checkbox("üìä –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è", value=True)
    include_anomalies = st.sidebar.checkbox("üîç –ü–æ–∏—Å–∫ –∞–Ω–æ–º–∞–ª–∏–π", value=True)
    include_correlations = st.sidebar.checkbox("üìà –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏", value=True)
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    st.markdown("### üìä –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
    st.markdown("""
    <div class="insight-box">
        <b>üéØ –ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç —Ä—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑:</b><br>
        ‚Ä¢ –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö 59 —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤<br>
        ‚Ä¢ –í—ã—è–≤–ª–µ–Ω–∏–µ –ª–∏–¥–µ—Ä–æ–≤ –∏ –∞—É—Ç—Å–∞–π–¥–µ—Ä–æ–≤<br>
        ‚Ä¢ –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ performance<br>
        ‚Ä¢ ML-–ø–æ–∏—Å–∫ —Ä—ã–Ω–æ—á–Ω—ã—Ö –∞–Ω–æ–º–∞–ª–∏–π<br>
        ‚Ä¢ –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Ñ–∞–∫—Ç–æ—Ä–∞–º–∏<br>
        ‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    </div>
    """, unsafe_allow_html=True)
    
    # –ë—ã—Å—Ç—Ä—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    market_data = get_market_overview()
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric("üìà –û–±—â–∏–π –æ–±–æ—Ä–æ—Ç", f"{market_data['total_sales']/1_000_000:.1f}M IDR")
    
    with col2:
        st.metric("üè™ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤", f"{market_data['total_restaurants']}")
    
    with col3:
        st.metric("üí∞ –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏", f"{market_data['avg_sales_per_restaurant']/1_000_000:.1f}M IDR")
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
    if st.button("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑", type="primary", use_container_width=True):
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∞—Ç—ã
        if period_type == "–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü":
            start_date = (datetime.now() - timedelta(days=30)).strftime('%Y-%m-%d')
            end_date = datetime.now().strftime('%Y-%m-%d')
        elif period_type == "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–≤–∞—Ä—Ç–∞–ª":
            start_date = (datetime.now() - timedelta(days=90)).strftime('%Y-%m-%d')
            end_date = datetime.now().strftime('%Y-%m-%d')
        elif period_type == "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª–≥–æ–¥–∞":
            start_date = (datetime.now() - timedelta(days=180)).strftime('%Y-%m-%d')
            end_date = datetime.now().strftime('%Y-%m-%d')
        else:
            if len(date_range) == 2:
                start_date = date_range[0].strftime('%Y-%m-%d')
                end_date = date_range[1].strftime('%Y-%m-%d')
            else:
                st.error("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
                st.stop()
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        progress_bar = st.progress(0)
        status_text = st.empty()
        
        status_text.text("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤...")
        progress_bar.progress(20)
        
        status_text.text("üìä –†–∞—Å—á–µ—Ç –±–µ–Ω—á–º–∞—Ä–∫–æ–≤...")
        progress_bar.progress(40)
        
        status_text.text("üîç ML-–ø–æ–∏—Å–∫ –∞–Ω–æ–º–∞–ª–∏–π...")
        progress_bar.progress(60)
        
        status_text.text("üìà –ê–Ω–∞–ª–∏–∑ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π...")
        progress_bar.progress(80)
        
        # –ó–∞–ø—É—Å–∫ —Ä—ã–Ω–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        result = run_analysis(None, start_date, end_date)
        
        progress_bar.progress(100)
        status_text.text("‚úÖ –†—ã–Ω–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        st.markdown("### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä—ã–Ω–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
        st.text_area("", result, height=600, key="market_result")
        
        # –î–µ–π—Å—Ç–≤–∏—è
        col1, col2 = st.columns(2)
        
        with col1:
            if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä—ã–Ω–æ—á–Ω—ã–π –æ—Ç—á–µ—Ç"):
                timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
                filename = f"reports/market_analysis_{start_date}_{end_date}_{timestamp}.txt"
                
                os.makedirs("reports", exist_ok=True)
                with open(filename, 'w', encoding='utf-8') as f:
                    f.write(result)
                
                st.success(f"‚úÖ –†—ã–Ω–æ—á–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filename}")
        
        with col2:
            if st.button("üìä –≠–∫—Å–ø–æ—Ä—Ç –≤ Excel"):
                st.info("–§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")

# ===== AI –ü–û–ú–û–©–ù–ò–ö =====
elif page == "üí¨ AI –ü–æ–º–æ—â–Ω–∏–∫":
    st.markdown("## üí¨ AI –ü–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")
    
    st.markdown("""
    <div class="insight-box">
        <b>ü§ñ –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ MUZAQUEST</b><br>
        –ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ –≤–∞—à–∏—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö, –∏ AI –¥–∞—Å—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö.
    </div>
    """, unsafe_allow_html=True)
    
    # –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤
    st.markdown("### üí° –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:")
    
    example_col1, example_col2 = st.columns(2)
    
    with example_col1:
        st.markdown("""
        **üìä –ê–Ω–∞–ª–∏–∑ performance:**
        - "–ü–æ—á–µ–º—É —É–ø–∞–ª–∏ –ø—Ä–æ–¥–∞–∂–∏ —É Ika Canggu?"
        - "–ö–∞–∫–æ–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª—É—á—à–∏–π ROAS?"
        - "–ß—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤?"
        """)
    
    with example_col2:
        st.markdown("""
        **üîç –ü–æ–∏—Å–∫ –ø—Ä–∏—á–∏–Ω:**
        - "–í–ª–∏—è–µ—Ç –ª–∏ –¥–æ–∂–¥—å –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É?"
        - "–ö–∞–∫ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ Galungan –≤–ª–∏—è—é—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏?"
        - "–ö–∞–∫–∏–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ —Å–∞–º—ã–µ –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ?"
        """)
    
    # –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏
    st.markdown("### üöÄ –ë—ã—Å—Ç—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã:")
    
    quick_col1, quick_col2, quick_col3 = st.columns(3)
    
    with quick_col1:
        if st.button("üìâ –ê–Ω–∞–ª–∏–∑ –ø–∞–¥–µ–Ω–∏–π", use_container_width=True):
            st.session_state.ai_question = "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã —Å –ø–∞–¥–µ–Ω–∏–µ–º –ø—Ä–æ–¥–∞–∂ –∏ –Ω–∞–π–¥–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã"
    
    with quick_col2:
        if st.button("üåü –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏", use_container_width=True):
            st.session_state.ai_question = "–ö–∞–∫–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ª—É—á—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –ø–æ—á–µ–º—É?"
    
    with quick_col3:
        if st.button("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", use_container_width=True):
            st.session_state.ai_question = "–î–∞–π —Ç–æ–ø-5 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂"
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞
    user_question = st.text_area(
        "üí¨ –í–∞—à –≤–æ–ø—Ä–æ—Å:",
        value=st.session_state.get('ai_question', ''),
        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–æ—á–µ–º—É —É Protein Kitchen –Ω–∏–∑–∫–∏–π ROAS –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏?",
        height=100,
        key="question_input"
    )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    col1, col2 = st.columns(2)
    
    with col1:
        analysis_depth = st.selectbox(
            "–ì–ª—É–±–∏–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞:",
            ["–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç", "–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑", "–ì–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ"],
            index=1
        )
    
    with col2:
        include_data = st.checkbox("üìä –í–∫–ª—é—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–≤–µ—Ç", value=True)
    
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
    if st.button("ü§ñ –ü–æ–ª—É—á–∏—Ç—å AI –æ—Ç–≤–µ—Ç", type="primary", use_container_width=True):
        if not user_question.strip():
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å")
        else:
            with st.spinner("üß† AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –≤–æ–ø—Ä–æ—Å..."):
                # –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
                import time
                time.sleep(2)
                
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI
                ai_response = ask_ai_question(user_question)
                
                # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                st.markdown("### ü§ñ –û—Ç–≤–µ—Ç AI –ø–æ–º–æ—â–Ω–∏–∫–∞:")
                st.markdown(ai_response)
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
                st.markdown("---")
                
                action_col1, action_col2, action_col3 = st.columns(3)
                
                with action_col1:
                    if st.button("üîÑ –£—Ç–æ—á–Ω–∏—Ç—å –≤–æ–ø—Ä–æ—Å"):
                        st.session_state.follow_up = True
                
                with action_col2:
                    if st.button("üìä –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑"):
                        st.info("–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É –∞–Ω–∞–ª–∏–∑—É...")
                
                with action_col3:
                    if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç"):
                        timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
                        filename = f"reports/ai_consultation_{timestamp}.txt"
                        
                        os.makedirs("reports", exist_ok=True)
                        with open(filename, 'w', encoding='utf-8') as f:
                            f.write(f"–í–æ–ø—Ä–æ—Å: {user_question}\n\n{ai_response}")
                        
                        st.success(f"üíæ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {filename}")
    
    # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if 'ai_question' in st.session_state:
        del st.session_state.ai_question

# –ü–æ–¥–≤–∞–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #666; margin-top: 2rem;">
    <p>üéØ <strong>MUZAQUEST Analytics Dashboard</strong> | –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è 2.0 | 2025</p>
    <p>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ë–∞–ª–∏ —Å AI –∏ ML</p>
</div>
""", unsafe_allow_html=True)