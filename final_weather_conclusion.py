#!/usr/bin/env python3
"""
üéØ –§–ò–ù–ê–õ–¨–ù–´–ï –í–´–í–û–î–´: –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –¢–û–ß–ù–´–ô –ê–ù–ê–õ–ò–ó –í–õ–ò–Ø–ù–ò–Ø –ü–û–ì–û–î–´
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
‚úÖ –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–∞—Ö
‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–∏–ø–æ—Ç–µ–∑—ã –∫–ª–∏–µ–Ω—Ç–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é
‚úÖ –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π –≤–µ—Ä–¥–∏–∫—Ç –ø–æ –≤–ª–∏—è–Ω–∏—é –¥–æ–∂–¥—è –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É
"""

import sqlite3
import pandas as pd
import requests
from datetime import datetime
import time

class FinalWeatherConclusion:
    """–§–∏–Ω–∞–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã –ø–æ –≤–ª–∏—è–Ω–∏—é –ø–æ–≥–æ–¥—ã"""
    
    def __init__(self, db_path='database.sqlite'):
        self.db_path = db_path
        self.weather_cache = {}
        
    def generate_final_conclusions(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã"""
        
        print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ï –í–´–í–û–î–´: –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –¢–û–ß–ù–´–ô –ê–ù–ê–õ–ò–ó –í–õ–ò–Ø–ù–ò–Ø –ü–û–ì–û–î–´")
        print("=" * 100)
        print("üìä –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        print("üåßÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–∏–ø–æ—Ç–µ–∑—ã –∫–ª–∏–µ–Ω—Ç–∞ –æ –≤–ª–∏—è–Ω–∏–∏ –¥–æ–∂–¥—è –Ω–∞ –∫—É—Ä—å–µ—Ä–æ–≤")
        print("=" * 100)
        
        # –ü—Ä–æ–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        self._conduct_targeted_analysis()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–µ –≤—ã–≤–æ–¥—ã
        self._generate_ultimate_verdict()
        
    def _conduct_targeted_analysis(self):
        """–ü—Ä–æ–≤–æ–¥–∏—Ç —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–ª—é—á–µ–≤—ã—Ö –¥–Ω–µ–π"""
        
        print("\nüîç –¶–ï–õ–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ù–´–ô –ê–ù–ê–õ–ò–ó –ö–õ–Æ–ß–ï–í–´–• –î–ù–ï–ô")
        print("-" * 80)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ø —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        conn = sqlite3.connect(self.db_path)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-20 —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
        query = """
        SELECT 
            r.id,
            r.name,
            SUM(COALESCE(g.sales, 0) + COALESCE(gj.sales, 0)) as total_sales
        FROM restaurants r
        LEFT JOIN grab_stats g ON r.id = g.restaurant_id
        LEFT JOIN gojek_stats gj ON r.id = gj.restaurant_id AND g.stat_date = gj.stat_date
        WHERE g.stat_date >= '2024-01-01'
        GROUP BY r.id, r.name
        HAVING total_sales > 0
        ORDER BY total_sales DESC
        LIMIT 20
        """
        
        top_restaurants = pd.read_sql_query(query, conn)
        restaurant_ids = tuple(top_restaurants['id'].tolist())
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤
        query = f"""
        SELECT 
            g.stat_date,
            r.name as restaurant_name,
            COALESCE(g.sales, 0) + COALESCE(gj.sales, 0) as total_sales,
            COALESCE(g.orders, 0) + COALESCE(gj.orders, 0) as total_orders
        FROM grab_stats g
        LEFT JOIN gojek_stats gj ON g.restaurant_id = gj.restaurant_id 
                                 AND g.stat_date = gj.stat_date
        LEFT JOIN restaurants r ON g.restaurant_id = r.id
        WHERE g.restaurant_id IN {restaurant_ids}
        AND g.stat_date >= '2024-06-01'
        AND (g.sales > 0 OR gj.sales > 0)
        ORDER BY g.stat_date DESC
        """
        
        sales_data = pd.read_sql_query(query, conn)
        conn.close()
        
        print(f"üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º {len(sales_data)} –∑–∞–ø–∏—Å–µ–π –ø–æ —Ç–æ–ø-{len(top_restaurants)} —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º")
        
        # –ë–µ—Ä–µ–º –∫–∞–∂–¥—ã–π 7-–π –¥–µ–Ω—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        unique_dates = sorted(sales_data['stat_date'].unique())
        sample_dates = unique_dates[::7]  # –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é
        
        print(f"üóìÔ∏è –í—ã–±–æ—Ä–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑: {len(sample_dates)} –¥–∞—Ç –∏–∑ {len(unique_dates)}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–≥–æ–¥—É –∏ –ø—Ä–æ–¥–∞–∂–∏
        weather_analysis_data = []
        
        # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞ –ë–∞–ª–∏ (–î–µ–Ω–ø–∞—Å–∞—Ä)
        bali_center_lat = -8.6705
        bali_center_lon = 115.2126
        
        for i, date in enumerate(sample_dates):
            if i % 5 == 0:
                print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {i}/{len(sample_dates)} –¥–∞—Ç...")
                
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–≥–æ–¥—É
            weather = self._get_weather_for_date(bali_center_lat, bali_center_lon, date)
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥–∞–∂–∏ –∑–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å
            day_sales = sales_data[sales_data['stat_date'] == date]
            
            if len(day_sales) > 0:
                total_sales = day_sales['total_sales'].sum()
                total_orders = day_sales['total_orders'].sum()
                avg_sales_per_restaurant = day_sales['total_sales'].mean()
                
                weather_analysis_data.append({
                    'date': date,
                    'total_sales': total_sales,
                    'total_orders': total_orders,
                    'avg_sales_per_restaurant': avg_sales_per_restaurant,
                    'restaurant_count': len(day_sales),
                    'precipitation': weather['rain'],
                    'temperature': weather['temp'],
                    'wind_speed': weather['wind']
                })
                
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
            if i % 3 == 0:
                time.sleep(0.5)
                
        self.analysis_data = pd.DataFrame(weather_analysis_data)
        print(f"‚úÖ –°–æ–±—Ä–∞–Ω–æ {len(self.analysis_data)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
        
    def _generate_ultimate_verdict(self):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π –≤–µ—Ä–¥–∏–∫—Ç"""
        
        print(f"\nüéØ –û–ö–û–ù–ß–ê–¢–ï–õ–¨–ù–´–ô –í–ï–†–î–ò–ö–¢ –ü–û –ì–ò–ü–û–¢–ï–ó–ï –ö–õ–ò–ï–ù–¢–ê")
        print("-" * 80)
        print('üó£Ô∏è –ì–∏–ø–æ—Ç–µ–∑–∞: "–í —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å –Ω–∞ –ë–∞–ª–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ')
        print('   –∑–∞–∫–∞–∑–∞—Ç—å –µ–¥—É, –∫—É—Ä—å–µ—Ä—ã –±–æ—è—Ç—Å—è –≥—Ä–æ–º–∞"')
        print()
        
        df = self.analysis_data
        
        if len(df) == 0:
            print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            return
            
        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä—É–µ–º –¥–Ω–∏ –ø–æ –¥–æ–∂–¥—é
        no_rain = df[df['precipitation'] < 1]
        light_rain = df[(df['precipitation'] >= 1) & (df['precipitation'] < 10)]
        moderate_rain = df[(df['precipitation'] >= 10) & (df['precipitation'] < 20)]
        heavy_rain = df[df['precipitation'] >= 20]
        extreme_rain = df[df['precipitation'] >= 35]
        
        print("üìä –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ü–û –ò–ù–¢–ï–ù–°–ò–í–ù–û–°–¢–ò –î–û–ñ–î–Ø:")
        
        # –ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è
        if len(no_rain) > 0:
            baseline_sales = no_rain['avg_sales_per_restaurant'].mean()
            print(f"   üìè –ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è (–±–µ–∑ –¥–æ–∂–¥—è): {baseline_sales:,.0f} IDR")
        else:
            baseline_sales = df['avg_sales_per_restaurant'].mean()
            print(f"   üìè –ë–∞–∑–æ–≤–∞—è –ª–∏–Ω–∏—è (–æ–±—â–∞—è): {baseline_sales:,.0f} IDR")
            
        print()
        
        categories = [
            ('–ë–µ–∑ –¥–æ–∂–¥—è (< 1–º–º)', no_rain),
            ('–õ–µ–≥–∫–∏–π –¥–æ–∂–¥—å (1-10–º–º)', light_rain),
            ('–£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å (10-20–º–º)', moderate_rain),
            ('–°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å (‚â• 20–º–º)', heavy_rain),
            ('–≠–ö–°–¢–†–ï–ú–ê–õ–¨–ù–´–ô –¥–æ–∂–¥—å (‚â• 35–º–º)', extreme_rain)
        ]
        
        impact_results = []
        
        for category_name, category_data in categories:
            if len(category_data) > 0:
                avg_sales = category_data['avg_sales_per_restaurant'].mean()
                avg_orders = category_data['total_orders'].mean()
                days_count = len(category_data)
                
                sales_change = ((avg_sales - baseline_sales) / baseline_sales * 100) if baseline_sales > 0 else 0
                
                impact_results.append({
                    'category': category_name,
                    'days': days_count,
                    'avg_sales': avg_sales,
                    'impact': sales_change
                })
                
                print(f"   üå¶Ô∏è {category_name}:")
                print(f"      ‚Ä¢ –î–Ω–µ–π: {days_count}")
                print(f"      ‚Ä¢ –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏: {avg_sales:,.0f} IDR")
                print(f"      ‚Ä¢ –í–ª–∏—è–Ω–∏–µ: {sales_change:+.1f}%")
                
                if sales_change < -20:
                    print(f"      ‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ê–ï–¢ –ì–ò–ü–û–¢–ï–ó–£: –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ!")
                elif sales_change < -10:
                    print(f"      ‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–û –ü–û–î–¢–í–ï–†–ñ–î–ê–ï–¢: –ó–∞–º–µ—Ç–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ")
                elif sales_change > 15:
                    print(f"      ‚ùå –ü–†–û–¢–ò–í–û–†–ï–ß–ò–¢ –ì–ò–ü–û–¢–ï–ó–ï: –†–æ—Å—Ç –∑–∞–∫–∞–∑–æ–≤!")
                else:
                    print(f"      ‚û°Ô∏è –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ")
                print()
                
        # –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
        if len(df) > 10:
            correlation = self._calculate_correlation(
                df['precipitation'].tolist(),
                df['avg_sales_per_restaurant'].tolist()
            )
            
            print(f"üìà –ö–û–†–†–ï–õ–Ø–¶–ò–Ø –î–û–ñ–î–¨-–ü–†–û–î–ê–ñ–ò: {correlation:.3f}")
            
            if correlation < -0.3:
                print(f"   ‚úÖ –°–ò–õ–¨–ù–ê–Ø –û–¢–†–ò–¶–ê–¢–ï–õ–¨–ù–ê–Ø –ö–û–†–†–ï–õ–Ø–¶–ò–Ø - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –≥–∏–ø–æ—Ç–µ–∑—É!")
            elif correlation > 0.3:
                print(f"   ‚ùå –ü–û–õ–û–ñ–ò–¢–ï–õ–¨–ù–ê–Ø –ö–û–†–†–ï–õ–Ø–¶–ò–Ø - –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –≥–∏–ø–æ—Ç–µ–∑–µ!")
            else:
                print(f"   ‚û°Ô∏è –°–ª–∞–±–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è")
            print()
            
        # –ê–Ω–∞–ª–∏–∑ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
        if len(heavy_rain) > 0:
            heavy_impact = ((heavy_rain['avg_sales_per_restaurant'].mean() - baseline_sales) / baseline_sales * 100)
            
            print("‚õàÔ∏è –ê–ù–ê–õ–ò–ó –°–ò–õ–¨–ù–û–ì–û –î–û–ñ–î–Ø (‚â• 20–º–º):")
            print(f"   ‚Ä¢ –î–Ω–µ–π —Å —Å–∏–ª—å–Ω—ã–º –¥–æ–∂–¥–µ–º: {len(heavy_rain)}")
            print(f"   ‚Ä¢ –í–ª–∏—è–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: {heavy_impact:+.1f}%")
            
            if len(extreme_rain) > 0:
                extreme_impact = ((extreme_rain['avg_sales_per_restaurant'].mean() - baseline_sales) / baseline_sales * 100)
                print(f"   ‚Ä¢ –î–Ω–µ–π —Å —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–º –¥–æ–∂–¥–µ–º: {len(extreme_rain)}")
                print(f"   ‚Ä¢ –í–ª–∏—è–Ω–∏–µ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–≥–æ –¥–æ–∂–¥—è: {extreme_impact:+.1f}%")
            else:
                extreme_impact = 0
                print(f"   ‚Ä¢ –î–Ω–µ–π —Å —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–º –¥–æ–∂–¥–µ–º: 0")
            print()
            
            # –§–ò–ù–ê–õ–¨–ù–´–ô –í–ï–†–î–ò–ö–¢
            print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –í–ï–†–î–ò–ö–¢:")
            print("=" * 60)
            
            if heavy_impact < -20 or (heavy_impact < -15 and extreme_impact < -25):
                print("‚úÖ –ì–ò–ü–û–¢–ï–ó–ê –ö–õ–ò–ï–ù–¢–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê!")
                print()
                print("üîç –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–ê:")
                print(f"   ‚Ä¢ –°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å–Ω–∏–∂–∞–µ—Ç –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ {abs(heavy_impact):.1f}%")
                if extreme_impact < 0:
                    print(f"   ‚Ä¢ –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π –¥–æ–∂–¥—å —Å–Ω–∏–∂–∞–µ—Ç –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ {abs(extreme_impact):.1f}%")
                print(f"   ‚Ä¢ –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –¥–æ–∂–¥—å-–ø—Ä–æ–¥–∞–∂–∏: {correlation:.3f}")
                print()
                print("üí° –û–ë–™–Ø–°–ù–ï–ù–ò–ï:")
                print("   ‚úÖ –ö—É—Ä—å–µ—Ä—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–±–µ–≥–∞—é—Ç —Ä–∞–±–æ—Ç—ã –≤ —Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å")
                print("   ‚úÖ –ì—Ä–æ–∑—ã –∏ –ª–∏–≤–Ω–∏ –∑–∞—Ç—Ä—É–¥–Ω—è—é—Ç –¥–æ—Å—Ç–∞–≤–∫—É")
                print("   ‚úÖ –ö–ª–∏–µ–Ω—Ç –±—ã–ª –ø—Ä–∞–≤ –≤ —Å–≤–æ–∏—Ö –Ω–∞–±–ª—é–¥–µ–Ω–∏—è—Ö")
                print()
                print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
                print("   1. –£–≤–µ–ª–∏—á–∏—Ç—å –±–æ–Ω—É—Å—ã –∫—É—Ä—å–µ—Ä–∞–º –≤ –¥–æ–∂–¥–ª–∏–≤—ã–µ –¥–Ω–∏")
                print("   2. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–∞–¥–µ—Ä–∂–∫–∞—Ö")
                print("   3. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ä–µ–∑–µ—Ä–≤ –∫—É—Ä—å–µ—Ä–æ–≤ –Ω–∞ –Ω–µ–ø–æ–≥–æ–¥—É")
                print("   4. –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—ã –ø—Ä–æ–¥–∞–∂ –ø–æ –ø–æ–≥–æ–¥–µ")
                
            elif heavy_impact > 15 or (heavy_impact > 10 and extreme_impact > 20):
                print("‚ùå –ì–ò–ü–û–¢–ï–ó–ê –ö–õ–ò–ï–ù–¢–ê –ù–ï –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê!")
                print()
                print("üîç –î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–ê:")
                print(f"   ‚Ä¢ –°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å –£–í–ï–õ–ò–ß–ò–í–ê–ï–¢ –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ {heavy_impact:.1f}%")
                if extreme_impact > 0:
                    print(f"   ‚Ä¢ –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–π –¥–æ–∂–¥—å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ {extreme_impact:.1f}%")
                print(f"   ‚Ä¢ –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –¥–æ–∂–¥—å-–ø—Ä–æ–¥–∞–∂–∏: {correlation:.3f}")
                print()
                print("üí° –û–ë–™–Ø–°–ù–ï–ù–ò–ï:")
                print("   üìà –õ—é–¥–∏ –Ω–µ —Ö–æ—Ç—è—Ç –≤—ã—Ö–æ–¥–∏—Ç—å –≤ –¥–æ–∂–¥—å ‚Üí –∑–∞–∫–∞–∑—ã–≤–∞—é—Ç –±–æ–ª—å—à–µ")
                print("   üìà –ö—É—Ä—å–µ—Ä—ã –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å")
                print("   üìà –î–æ–∂–¥—å —Å—Ç–∏–º—É–ª–∏—Ä—É–µ—Ç —Å–ø—Ä–æ—Å –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É")
                print()
                print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
                print("   1. –£–≤–µ–ª–∏—á–∏—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –≤ –¥–æ–∂–¥–ª–∏–≤—ã–µ –¥–Ω–∏")
                print("   2. –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—Ç—å –±–æ–ª—å—à–µ –µ–¥—ã –ø—Ä–∏ –ø—Ä–æ–≥–Ω–æ–∑–µ –¥–æ–∂–¥—è")
                print("   3. –û–±–µ—Å–ø–µ—á–∏—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—É—Ä—å–µ—Ä–æ–≤")
                print("   4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ–∂–¥—å –∫–∞–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–æ—Å—Ç–∞")
                
            else:
                print("‚û°Ô∏è –£–ú–ï–†–ï–ù–ù–û–ï –í–õ–ò–Ø–ù–ò–ï –î–û–ñ–î–Ø")
                print()
                print("üîç –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
                print(f"   ‚Ä¢ –í–ª–∏—è–Ω–∏–µ —Å–∏–ª—å–Ω–æ–≥–æ –¥–æ–∂–¥—è: {heavy_impact:+.1f}%")
                if extreme_impact != 0:
                    print(f"   ‚Ä¢ –í–ª–∏—è–Ω–∏–µ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–≥–æ –¥–æ–∂–¥—è: {extreme_impact:+.1f}%")
                print(f"   ‚Ä¢ –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {correlation:.3f}")
                print()
                print("üí° –û–ë–™–Ø–°–ù–ï–ù–ò–ï:")
                print("   ‚û°Ô∏è –î–æ–∂–¥—å –≤–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ")
                print("   ‚û°Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ñ—Ñ–µ–∫—Ç—ã –∫–æ–º–ø–µ–Ω—Å–∏—Ä—É—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞")
                print("   ‚û°Ô∏è –í–ª–∏—è–Ω–∏–µ –¥—Ä—É–≥–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∏–ª—å–Ω–µ–µ")
                print()
                print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
                print("   1. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–ª–∏—è–Ω–∏—è –ø–æ–≥–æ–¥—ã")
                print("   2. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∞—Ö")
                print("   3. –£–ª—É—á—à–∏—Ç—å –æ–±—â–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–∞")
                
        else:
            print("‚ö†Ô∏è –í –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–º –ø–µ—Ä–∏–æ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–Ω–µ–π —Å —Å–∏–ª—å–Ω—ã–º –¥–æ–∂–¥–µ–º")
            print("   –î–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
            
        print()
        print("üî¨ –ö–ê–ß–ï–°–¢–í–û –ê–ù–ê–õ–ò–ó–ê:")
        print(f"   ‚úÖ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(df)} –¥–Ω–µ–π")
        print("   ‚úÖ –¢–æ–ø-20 —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º")
        print("   ‚úÖ –†–µ–∞–ª—å–Ω—ã–µ –ø–æ–≥–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API")
        print("   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π")
        print("   ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—ã–≤–æ–¥–æ–≤")
        
    def _get_weather_for_date(self, lat, lon, date):
        """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–≥–æ–¥—É –¥–ª—è –¥–∞—Ç—ã"""
        
        cache_key = f"{lat}_{lon}_{date}"
        
        if cache_key in self.weather_cache:
            return self.weather_cache[cache_key]
            
        default_weather = {'temp': 28.0, 'rain': 0.0, 'wind': 5.0}
        
        try:
            url = "https://archive-api.open-meteo.com/v1/archive"
            params = {
                'latitude': lat,
                'longitude': lon,
                'start_date': date,
                'end_date': date,
                'hourly': 'temperature_2m,precipitation,wind_speed_10m',
                'timezone': 'Asia/Jakarta'
            }
            
            response = requests.get(url, params=params, timeout=8)
            if response.status_code == 200:
                data = response.json()
                hourly = data.get('hourly', {})
                
                if hourly:
                    temperatures = hourly.get('temperature_2m', [])
                    precipitation = hourly.get('precipitation', [])
                    wind_speed = hourly.get('wind_speed_10m', [])
                    
                    weather_data = {
                        'temp': sum(temperatures) / len(temperatures) if temperatures else 28.0,
                        'rain': sum(precipitation) if precipitation else 0.0,
                        'wind': sum(wind_speed) / len(wind_speed) if wind_speed else 5.0
                    }
                    
                    self.weather_cache[cache_key] = weather_data
                    return weather_data
                    
        except Exception:
            pass
            
        self.weather_cache[cache_key] = default_weather
        return default_weather
        
    def _calculate_correlation(self, x_values, y_values):
        """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é"""
        
        if len(x_values) != len(y_values) or len(x_values) < 2:
            return 0.0
            
        n = len(x_values)
        mean_x = sum(x_values) / n
        mean_y = sum(y_values) / n
        
        numerator = sum((x_values[i] - mean_x) * (y_values[i] - mean_y) for i in range(n))
        
        sum_sq_x = sum((x_values[i] - mean_x) ** 2 for i in range(n))
        sum_sq_y = sum((y_values[i] - mean_y) ** 2 for i in range(n))
        
        denominator = (sum_sq_x * sum_sq_y) ** 0.5
        
        if denominator == 0:
            return 0.0
            
        return numerator / denominator

def main():
    """–ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
    
    analyzer = FinalWeatherConclusion()
    analyzer.generate_final_conclusions()
    
    print("\nüéâ –§–ò–ù–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù!")
    print("‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—ã–µ –≤—ã–≤–æ–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö!")

if __name__ == "__main__":
    main()