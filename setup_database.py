#!/usr/bin/env python3
"""
üîß –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞—á–∏–≤–∞–µ—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
"""

import os
import sys
import sqlite3
import urllib.request
from urllib.error import URLError

DATABASE_URL = "https://github.com/muzaquest/bali-food-intelligence/raw/main/database.sqlite"
DATABASE_FILE = "database.sqlite"
EXPECTED_SIZE_MB = 4.0

def download_database():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å GitHub"""
    print("üì• –°–∫–∞—á–∏–≤–∞—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    try:
        urllib.request.urlretrieve(DATABASE_URL, DATABASE_FILE)
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–∞!")
        return True
    except URLError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def verify_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    if not os.path.exists(DATABASE_FILE):
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    size_mb = os.path.getsize(DATABASE_FILE) / (1024 * 1024)
    if size_mb < EXPECTED_SIZE_MB * 0.8:  # –î–æ–ø—É—Å–∫–∞–µ–º 20% –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
        print(f"‚ùå –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–ª–∏—à–∫–æ–º –º–∞–ª: {size_mb:.1f}MB (–æ–∂–∏–¥–∞–µ—Ç—Å—è ~{EXPECTED_SIZE_MB}MB)")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        conn = sqlite3.connect(DATABASE_FILE)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = [row[0] for row in cursor.fetchall()]
        
        required_tables = ['restaurants', 'grab_stats', 'gojek_stats']
        missing_tables = [table for table in required_tables if table not in tables]
        
        if missing_tables:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–∞–±–ª–∏—Ü—ã: {missing_tables}")
            conn.close()
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        cursor.execute("SELECT COUNT(*) FROM restaurants")
        restaurant_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM grab_stats")
        grab_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM gojek_stats")
        gojek_count = cursor.fetchone()[0]
        
        conn.close()
        
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞:")
        print(f"   üìä –†–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤: {restaurant_count}")
        print(f"   üìà –ó–∞–ø–∏—Å–µ–π GRAB: {grab_count}")
        print(f"   üì± –ó–∞–ø–∏—Å–µ–π GOJEK: {gojek_count}")
        print(f"   üíæ –†–∞–∑–º–µ—Ä: {size_mb:.1f}MB")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ù–ê–°–¢–†–û–ô–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• MUZAQUEST ANALYTICS")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if os.path.exists(DATABASE_FILE):
        print("üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è—é —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å...")
        if verify_database():
            print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
            return
        else:
            print("\n‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞, –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...")
            os.remove(DATABASE_FILE)
    else:
        print("üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if download_database():
        if verify_database():
            print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        else:
            print("\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞")
            sys.exit(1)
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        print("üì• –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∫–∞—á–∞—Ç—å –≤—Ä—É—á–Ω—É—é:")
        print(f"   wget {DATABASE_URL}")
        sys.exit(1)

if __name__ == "__main__":
    main()