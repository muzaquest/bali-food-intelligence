#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenWeatherMap API —Å —Ä–µ–∞–ª—å–Ω—ã–º –∫–ª—é—á–æ–º
"""

import sys
import os
sys.path.append('api_integrations')

from weather_service import WeatherService
import json
from datetime import datetime

# –†–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á OpenWeatherMap
API_KEY = "72d020d7f113b2e26ee71c1f6e9d7ae1"

def test_weather_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ WeatherService —Å —Ä–µ–∞–ª—å–Ω—ã–º API"""
    print("üå§Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenWeatherMap API")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –ø–æ–≥–æ–¥—ã
    weather_service = WeatherService(API_KEY)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã –ë–∞–ª–∏
    test_regions = ['Seminyak', 'Ubud', 'Canggu', 'Denpasar']
    
    for region in test_regions:
        print(f"\nüèùÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞: {region}")
        print("-" * 30)
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É
            current_weather = weather_service.get_current_weather(region)
            print(f"‚úÖ –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
            print(f"   –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {current_weather['temperature']}¬∞C")
            print(f"   –í–ª–∞–∂–Ω–æ—Å—Ç—å: {current_weather['humidity']}%")
            print(f"   –û—Å–∞–¥–∫–∏: {current_weather['precipitation']}–º–º")
            print(f"   –í–µ—Ç–µ—Ä: {current_weather['wind_speed']}–º/—Å")
            print(f"   –£—Å–ª–æ–≤–∏—è: {current_weather['description']}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏
            weather_impact = weather_service.get_weather_impact(region)
            print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:")
            print(f"   –í–ª–∏—è–Ω–∏–µ: {weather_impact['impact_percent']:+.1f}%")
            print(f"   –ü—Ä–∏—á–∏–Ω—ã: {', '.join(weather_impact['reasons'])}")
            print(f"   –£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏: {weather_impact['delivery_conditions']}")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–µ–¥–µ–ª—é
            weekly_forecast = weather_service.get_weekly_weather_impact(region)
            print(f"‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–µ–¥–µ–ª—é:")
            print(f"   –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑: {weekly_forecast['avg_impact']*100:+.1f}%")
            print(f"   –õ—É—á—à–∏–π –¥–µ–Ω—å: {weekly_forecast['best_day']['date']} ({weekly_forecast['best_day']['impact']*100:+.1f}%)")
            print(f"   –•—É–¥—à–∏–π –¥–µ–Ω—å: {weekly_forecast['worst_day']['date']} ({weekly_forecast['worst_day']['impact']*100:+.1f}%)")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞ {region}: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    test_results = {
        'timestamp': datetime.now().isoformat(),
        'api_key_status': 'working',
        'regions_tested': test_regions,
        'all_functions_working': True,
        'sample_data': {}
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞–∑–µ—Ü –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Seminyak
    try:
        sample_impact = weather_service.get_weather_impact('Seminyak')
        test_results['sample_data'] = {
            'region': 'Seminyak',
            'weather_impact': sample_impact['impact_percent'],
            'weather_summary': sample_impact['weather_summary'],
            'delivery_conditions': sample_impact['delivery_conditions']
        }
        
        print(f"‚úÖ API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print(f"‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        print(f"‚úÖ –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Seminyak:")
        print(f"   –í–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã: {sample_impact['impact_percent']:+.1f}%")
        print(f"   –°–≤–æ–¥–∫–∞: {sample_impact['weather_summary']}")
        print(f"   –£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏: {sample_impact['delivery_conditions']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞–∑—Ü–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
        test_results['all_functions_working'] = False
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    with open('weather_api_test_results.json', 'w', encoding='utf-8') as f:
        json.dump(test_results, f, ensure_ascii=False, indent=2)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ weather_api_test_results.json")
    
    return test_results

def test_specific_scenarios():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –ë–∞–ª–∏"""
    print("\nüéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ü–ï–¶–ò–§–ò–ß–ï–°–ö–ò–• –°–¶–ï–ù–ê–†–ò–ï–í")
    print("=" * 50)
    
    weather_service = WeatherService(API_KEY)
    
    scenarios = [
        {
            'name': '–î–æ–∂–¥–ª–∏–≤—ã–π –¥–µ–Ω—å –≤ –°–µ–º–∏–Ω—å—è–∫–µ',
            'region': 'Seminyak',
            'description': '–ê–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è –¥–æ–∂–¥—è –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –µ–¥—ã'
        },
        {
            'name': '–°–æ–ª–Ω–µ—á–Ω—ã–π –¥–µ–Ω—å –≤ –£–±—É–¥–µ',
            'region': 'Ubud',
            'description': '–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏'
        },
        {
            'name': '–í–µ—Ç—Ä–µ–Ω—ã–π –¥–µ–Ω—å –≤ –ß–∞–Ω–≥—É',
            'region': 'Canggu',
            'description': '–í–ª–∏—è–Ω–∏–µ –≤–µ—Ç—Ä–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É'
        }
    ]
    
    for scenario in scenarios:
        print(f"\nüìã –°—Ü–µ–Ω–∞—Ä–∏–π: {scenario['name']}")
        print(f"üìç –†–µ–≥–∏–æ–Ω: {scenario['region']}")
        print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {scenario['description']}")
        print("-" * 40)
        
        try:
            impact = weather_service.get_weather_impact(scenario['region'])
            
            # –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            if impact['impact_percent'] < -20:
                interpretation = "üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏"
            elif impact['impact_percent'] < -10:
                interpretation = "üü° –£–º–µ—Ä–µ–Ω–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂"
            elif impact['impact_percent'] < 0:
                interpretation = "üü† –ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂"
            else:
                interpretation = "üü¢ –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∂"
            
            print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {impact['impact_percent']:+.1f}%")
            print(f"üéØ –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: {interpretation}")
            print(f"üìã –ü—Ä–∏—á–∏–Ω—ã: {', '.join(impact['reasons'])}")
            print(f"üöö –î–æ—Å—Ç–∞–≤–∫–∞: {impact['delivery_conditions']}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def generate_weather_report():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –ë–∞–ª–∏"""
    print("\nüìà –ì–ï–ù–ï–†–ê–¶–ò–Ø –û–¢–ß–ï–¢–ê –û –ü–û–ì–û–î–ï")
    print("=" * 50)
    
    weather_service = WeatherService(API_KEY)
    
    all_regions = ['Seminyak', 'Ubud', 'Canggu', 'Denpasar', 'Sanur', 'Nusa Dua', 'Jimbaran', 'Kuta']
    
    weather_report = {
        'timestamp': datetime.now().isoformat(),
        'regions': {},
        'summary': {
            'best_region': None,
            'worst_region': None,
            'avg_impact': 0
        }
    }
    
    impacts = []
    
    for region in all_regions:
        try:
            impact = weather_service.get_weather_impact(region)
            weather_report['regions'][region] = {
                'impact_percent': impact['impact_percent'],
                'weather_summary': impact['weather_summary'],
                'delivery_conditions': impact['delivery_conditions'],
                'reasons': impact['reasons']
            }
            impacts.append((region, impact['impact_percent']))
            
            print(f"üèùÔ∏è {region:12} | {impact['impact_percent']:+5.1f}% | {impact['weather_summary']}")
            
        except Exception as e:
            print(f"‚ùå {region:12} | ERROR | {e}")
    
    if impacts:
        # –ù–∞—Ö–æ–¥–∏–º –ª—É—á—à–∏–π –∏ —Ö—É–¥—à–∏–π —Ä–µ–≥–∏–æ–Ω—ã
        best_region = max(impacts, key=lambda x: x[1])
        worst_region = min(impacts, key=lambda x: x[1])
        avg_impact = sum(impact[1] for impact in impacts) / len(impacts)
        
        weather_report['summary'] = {
            'best_region': {'name': best_region[0], 'impact': best_region[1]},
            'worst_region': {'name': worst_region[0], 'impact': worst_region[1]},
            'avg_impact': avg_impact
        }
        
        print("\nüìä –°–í–û–î–ö–ê:")
        print(f"üèÜ –õ—É—á—à–∏–π —Ä–µ–≥–∏–æ–Ω: {best_region[0]} ({best_region[1]:+.1f}%)")
        print(f"‚ö†Ô∏è  –•—É–¥—à–∏–π —Ä–µ–≥–∏–æ–Ω: {worst_region[0]} ({worst_region[1]:+.1f}%)")
        print(f"üìà –°—Ä–µ–¥–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å: {avg_impact:+.1f}%")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    with open('bali_weather_report.json', 'w', encoding='utf-8') as f:
        json.dump(weather_report, f, ensure_ascii=False, indent=2)
    
    print(f"\nüíæ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ bali_weather_report.json")
    
    return weather_report

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø OPENWEATHERMAP API")
    print("üîë API Key: 72d020d7f113b2e26ee71c1f6e9d7ae1")
    print("üåç –†–µ–≥–∏–æ–Ω—ã: –ë–∞–ª–∏, –ò–Ω–¥–æ–Ω–µ–∑–∏—è")
    print("‚è∞ –í—Ä–µ–º—è:", datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_results = test_weather_api()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
    test_specific_scenarios()
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    weather_report = generate_weather_report()
    
    print("\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("üìã –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã:")
    print("   - weather_api_test_results.json")
    print("   - bali_weather_report.json")
    print("\n‚úÖ OpenWeatherMap API –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!")