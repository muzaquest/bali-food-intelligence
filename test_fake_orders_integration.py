#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ fake orders —Å ProductionSalesAnalyzer
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append('src')
sys.path.append('.')

from src.analyzers.production_sales_analyzer import ProductionSalesAnalyzer

def test_fake_orders_integration():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò FAKE ORDERS")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
        analyzer = ProductionSalesAnalyzer()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ fake orders
        test_cases = [
            {"restaurant": "Only Eggs", "date": "2025-07-29"},  # –î–µ–Ω—å —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º fake orders
            {"restaurant": "Pinkman", "date": "2025-07-03"},    # –ê–∫—Ç–∏–≤–Ω–∞—è –¥–∞—Ç–∞
            {"restaurant": "Ika Canggu", "date": "2025-06-10"}  # –ï—â–µ –æ–¥–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –¥–∞—Ç–∞
        ]
        
        for test_case in test_cases:
            restaurant = test_case["restaurant"]
            date = test_case["date"]
            
            print(f"\nüîç –¢–ï–°–¢: {restaurant} –Ω–∞ {date}")
            print("-" * 40)
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –¥–µ–Ω—å
            day_data = analyzer._get_day_data(restaurant, date)
            
            if day_data:
                print(f"üìä –î–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã:")
                print(f"   Grab: {day_data['grab_sales']:,.0f} IDR ({day_data['grab_orders']} –∑–∞–∫–∞–∑–æ–≤)")
                print(f"   Gojek: {day_data['gojek_sales']:,.0f} IDR ({day_data['gojek_orders']} –∑–∞–∫–∞–∑–æ–≤)")
                print(f"   –í—Å–µ–≥–æ: {day_data['total_sales']:,.0f} IDR ({day_data['total_orders']} –∑–∞–∫–∞–∑–æ–≤)")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ fake orders
                if 'fake_orders_detected' in day_data:
                    fake_info = day_data['fake_orders_detected']
                    print(f"üö® FAKE ORDERS –û–ë–ù–ê–†–£–ñ–ï–ù–´:")
                    print(f"   Grab fake: {fake_info['grab_fake_orders']} –∑–∞–∫–∞–∑–æ–≤ ({fake_info['grab_fake_amount']:,.0f} IDR)")
                    print(f"   Gojek fake: {fake_info['gojek_fake_orders']} –∑–∞–∫–∞–∑–æ–≤ ({fake_info['gojek_fake_amount']:,.0f} IDR)")
                    
                    total_fake = fake_info['grab_fake_orders'] + fake_info['gojek_fake_orders']
                    total_fake_amount = fake_info['grab_fake_amount'] + fake_info['gojek_fake_amount']
                    print(f"   ‚ö†Ô∏è –í–°–ï–ì–û –ò–°–ö–õ–Æ–ß–ï–ù–û: {total_fake} fake orders ({total_fake_amount:,.0f} IDR)")
                else:
                    print("‚úÖ Fake orders –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã")
                    
            else:
                print("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
        print(f"\nüéØ –ü–û–õ–ù–´–ô –ê–ù–ê–õ–ò–ó –° FAKE ORDERS –§–ò–õ–¨–¢–†–ê–¶–ò–ï–ô")
        print("=" * 60)
        
        result = analyzer.analyze_restaurant_performance("Only Eggs", "2025-07-29", "2025-07-29", use_ml=False)
        
        print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢ –ê–ù–ê–õ–ò–ó–ê:")
        for line in result[:20]:  # –ü–µ—Ä–≤—ã–µ 20 —Å—Ç—Ä–æ–∫
            print(line)
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ fake orders –≤ –æ—Ç—á–µ—Ç–µ
        fake_mentioned = any("FAKE ORDERS" in line for line in result)
        print(f"\nüîç Fake orders —É–ø–æ–º—è–Ω—É—Ç—ã –≤ –æ—Ç—á–µ—Ç–µ: {'‚úÖ –î–∞' if fake_mentioned else '‚ùå –ù–µ—Ç'}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_fake_orders_integration()