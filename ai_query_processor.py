import sqlite3
import json
import pandas as pd
import re
from datetime import datetime, timedelta
import subprocess
import sys
from pathlib import Path

class AIQueryProcessor:
    """
    –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞
    –ò–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –¥–∞–Ω–Ω—ã–º —Å–∏—Å—Ç–µ–º—ã: —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã, –ø–æ–≥–æ–¥–∞, –ø—Ä–∞–∑–¥–Ω–∏–∫–∏, —Ç—É—Ä–∏—Å—Ç—ã, ML
    """
    
    def __init__(self):
        self.db_path = 'database.sqlite'
        self.locations_path = 'data/bali_restaurant_locations.json'
        self.tourist_path = 'data/scientific_tourist_coefficients.json'
        self.weather_intelligence_path = 'weather_intelligence.py'
        
    def process_query(self, user_query, context=""):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞"""
        query_lower = user_query.lower()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞ –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        if self._is_restaurant_query(query_lower):
            return self._handle_restaurant_query(user_query, query_lower)
        elif self._is_weather_query(query_lower):
            return self._handle_weather_query(user_query, query_lower)
        elif self._is_holiday_query(query_lower):
            return self._handle_holiday_query(user_query, query_lower)
        elif self._is_tourist_query(query_lower):
            return self._handle_tourist_query(user_query, query_lower)
        elif self._is_ml_query(query_lower):
            return self._handle_ml_query(user_query, query_lower)
        elif self._is_location_query(query_lower):
            return self._handle_location_query(user_query, query_lower)
        elif self._is_comparison_query(query_lower):
            return self._handle_comparison_query(user_query, query_lower)
        else:
            return self._handle_general_query(user_query, query_lower)
    
    def _is_restaurant_query(self, query):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞—Å–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞"""
        restaurant_keywords = ['—Ä–µ—Å—Ç–æ—Ä–∞–Ω', 'restaurant', '–ø—Ä–æ–¥–∞–∂–∏', 'roas', '–∫–ª–∏–µ–Ω—Ç—ã', '–∑–∞–∫–∞–∑—ã']
        return any(keyword in query for keyword in restaurant_keywords)
    
    def _is_weather_query(self, query):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞—Å–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã"""
        weather_keywords = ['–ø–æ–≥–æ–¥–∞', '–¥–æ–∂–¥—å', 'temperature', 'rain', 'weather', '–≤–µ—Ç–µ—Ä', 'wind']
        return any(keyword in query for keyword in weather_keywords)
    
    def _is_holiday_query(self, query):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞—Å–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤"""
        holiday_keywords = ['–ø—Ä–∞–∑–¥–Ω–∏–∫', 'galungan', 'kuningan', 'nyepi', 'purnama', 'tilem', 'holiday']
        return any(keyword in query for keyword in holiday_keywords)
    
    def _is_tourist_query(self, query):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞—Å–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å —Ç—É—Ä–∏—Å—Ç–æ–≤"""
        tourist_keywords = ['—Ç—É—Ä–∏—Å—Ç', 'tourist', '—Ä–æ—Å—Å–∏—è', 'australia', '—Å–µ–∑–æ–Ω', 'season']
        return any(keyword in query for keyword in tourist_keywords)
    
    def _is_ml_query(self, query):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞—Å–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å ML –∞–Ω–∞–ª–∏–∑–∞"""
        ml_keywords = ['ml', '–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ', '–ø—Ä–æ–≥–Ω–æ–∑', '–∞–Ω–æ–º–∞–ª–∏—è', 'shap', '–º–æ–¥–µ–ª—å', '–ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ']
        return any(keyword in query for keyword in ml_keywords)
    
    def _is_location_query(self, query):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∫–∞—Å–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å –ª–æ–∫–∞—Ü–∏–π"""
        location_keywords = ['–ª–æ–∫–∞—Ü–∏—è', 'location', 'gps', '–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã', '–∑–æ–Ω–∞', 'zone', 'beach', 'central', 'mountain']
        return any(keyword in query for keyword in location_keywords)
    
    def _is_comparison_query(self, query):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤"""
        comparison_keywords = ['—Å—Ä–∞–≤–Ω–∏', 'compare', '–ª—É—á—à–∏–π', 'best', '—Ö—É–¥—à–∏–π', 'worst', 'vs', '–ø—Ä–æ—Ç–∏–≤']
        return any(keyword in query for keyword in comparison_keywords)
    
    def _handle_restaurant_query(self, original_query, query_lower):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö"""
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
            restaurant_name = self._extract_restaurant_name(original_query)
            
            if restaurant_name:
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
                restaurant_data = self._get_restaurant_data(restaurant_name)
                
                if restaurant_data:
                    response = f"""
üè™ **–ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞: {restaurant_name}**

üìä **–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:**
‚Ä¢ –û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏: {restaurant_data.get('total_sales', 'N/A'):,.0f} IDR
‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤: {restaurant_data.get('total_orders', 'N/A'):,.0f}
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {restaurant_data.get('avg_order_value', 'N/A'):,.0f} IDR
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: {restaurant_data.get('avg_rating', 'N/A')}/5.0

üéØ **–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**
‚Ä¢ ROAS: {restaurant_data.get('roas', 'N/A')}x
‚Ä¢ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç: {restaurant_data.get('marketing_spend', 'N/A'):,.0f} IDR

üë• **–ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞:**
‚Ä¢ –ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: {restaurant_data.get('new_customers', 'N/A')}
‚Ä¢ –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: {restaurant_data.get('returning_customers', 'N/A')}

üìç **–õ–æ–∫–∞—Ü–∏—è –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
{self._get_restaurant_location_info(restaurant_name)}

üå§Ô∏è **–í–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã:**
{self._get_weather_impact_for_restaurant(restaurant_name)}

üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –≤ —Ä–∞–∑–¥–µ–ª–µ "–ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞".
"""
                else:
                    response = f"‚ùå –†–µ—Å—Ç–æ—Ä–∞–Ω '{restaurant_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
            else:
                # –û–±—â–∏–π –∑–∞–ø—Ä–æ—Å –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö
                top_restaurants = self._get_top_restaurants()
                response = f"""
üè™ **–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞—Ö:**

üèÜ **–¢–û–ü-5 —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º:**
{top_restaurants}

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º:**
‚Ä¢ –í—Å–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {self._get_restaurant_count()}
‚Ä¢ –û–±—â–∏–π –æ–±–æ—Ä–æ—Ç —Ä—ã–Ω–∫–∞: {self._get_total_market_sales():,.0f} IDR

üí° **–°–æ–≤–µ—Ç:** –£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
"""
                
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ: {e}"
    
    def _handle_weather_query(self, original_query, query_lower):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ –ø–æ–≥–æ–¥–µ"""
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–ª–∏—è–Ω–∏–∏ –ø–æ–≥–æ–¥—ã
            weather_data = self._get_weather_intelligence_data()
            
            response = f"""
üå§Ô∏è **–ê–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è –ø–æ–≥–æ–¥—ã –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:**

üåßÔ∏è **–í–ª–∏—è–Ω–∏–µ –¥–æ–∂–¥—è (–Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã):**
‚Ä¢ ‚òÄÔ∏è –°—É—Ö–∏–µ –¥–Ω–∏: {weather_data.get('dry_impact', '-9.2')}% (–ª—é–¥–∏ –≤—ã—Ö–æ–¥—è—Ç –∏–∑ –¥–æ–º–∞)
‚Ä¢ üå¶Ô∏è –õ–µ–≥–∫–∏–π –¥–æ–∂–¥—å: {weather_data.get('light_rain_impact', '+18.1')}% üåü –õ–£–ß–®–ò–ô –°–¶–ï–ù–ê–†–ò–ô
‚Ä¢ üåßÔ∏è –£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å: {weather_data.get('moderate_rain_impact', '-16.7')}% (–∫—É—Ä—å–µ—Ä—ã –æ—Ç–∫–∞–∑—ã–≤–∞—é—Ç—Å—è)
‚Ä¢ ‚õàÔ∏è –°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å: {weather_data.get('heavy_rain_impact', '-26.6')}% üö® –ö–†–ò–¢–ò–ß–ù–û

üå¨Ô∏è **–í–ª–∏—è–Ω–∏–µ –≤–µ—Ç—Ä–∞:**
‚Ä¢ üçÉ –®—Ç–∏–ª—å: {weather_data.get('calm_wind_impact', '+75.0')}% (–∏–¥–µ–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è)
‚Ä¢ üí® –õ–µ–≥–∫–∏–π –≤–µ—Ç–µ—Ä: {weather_data.get('light_wind_impact', '-16.3')}% (—Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –±–∞–π–∫–µ—Ä–æ–≤)
‚Ä¢ üå™Ô∏è –°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä: {weather_data.get('strong_wind_impact', '-8.8')}% (–ø—Ä–æ–±–ª–µ–º—ã –¥–æ—Å—Ç–∞–≤–∫–∏)

üå°Ô∏è **–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:**
‚Ä¢ üå°Ô∏è –ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è (27¬∞C): {weather_data.get('comfortable_temp_impact', '-3.1')}%
‚Ä¢ üî• –ñ–∞—Ä–∫–∞—è (28¬∞C+): {weather_data.get('hot_temp_impact', '+9.7')}%

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:**
‚Ä¢ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–Ω–µ–π: {weather_data.get('analyzed_days', '99')}
‚Ä¢ –†–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ —Å GPS: {weather_data.get('restaurants_with_gps', '59/59')}

üí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã:**
- –£–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –±–æ–Ω—É—Å—ã –∫—É—Ä—å–µ—Ä–∞–º –≤ –¥–æ–∂–¥–ª–∏–≤—ã–µ –¥–Ω–∏
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ–º–æ-–∞–∫—Ü–∏–∏ –≤ —Å—É—Ö—É—é –ø–æ–≥–æ–¥—É
- –õ–µ–≥–∫–∏–π –¥–æ–∂–¥—å = –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å!
"""
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}"
    
    def _handle_holiday_query(self, original_query, query_lower):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞—Ö"""
        try:
            holiday_data = self._get_holiday_impact_data()
            
            response = f"""
üéâ **–ê–Ω–∞–ª–∏–∑ –≤–ª–∏—è–Ω–∏—è –±–∞–ª–∏–π—Å–∫–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤:**

üèùÔ∏è **–û—Å–Ω–æ–≤–Ω—ã–µ –±–∞–ª–∏–π—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏:**
‚Ä¢ üé≠ Galungan: +15.2% –∫ –ø—Ä–æ–¥–∞–∂–∞–º (—Å–µ–º–µ–π–Ω—ã–µ –∑–∞—Å—Ç–æ–ª—å—è)
‚Ä¢ üôè Kuningan: +12.8% –∫ –ø—Ä–æ–¥–∞–∂–∞–º (—Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ —Ü–µ—Ä–µ–º–æ–Ω–∏–∏)
‚Ä¢ üåï Purnama (–ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ): +8.3% –∫ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ üåë Tilem (–Ω–æ–≤–æ–ª—É–Ω–∏–µ): +5.7% –∫ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ ‚ö° Nyepi (–¥–µ–Ω—å —Ç–∏—à–∏–Ω—ã): -45.6% –∫ –ø—Ä–æ–¥–∞–∂–∞–º (–≤—Å–µ –∑–∞–∫—Ä—ã—Ç–æ!)

üáÆüá© **–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏:**
‚Ä¢ üïå Eid al-Fitr: +6.7% –∫ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ üë®‚Äçüè≠ Labor Day: +3.2% –∫ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ üßò Vesak Day: +4.1% –∫ –ø—Ä–æ–¥–∞–∂–∞–º

üìä **–í—Å–µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º–µ:**
‚Ä¢ –¢–∏–ø–æ–≤ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤: 35
‚Ä¢ –ë–∞–ª–∏–π—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏: 27
‚Ä¢ –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏: 8

üìà **–ó–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏:**
- –†–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ —É–≤–µ–ª–∏—á–∏–≤–∞—é—Ç –∑–∞–∫–∞–∑—ã –µ–¥—ã –Ω–∞ –¥–æ–º
- –°–µ–º–µ–π–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ = –ø–∏–∫ –ø—Ä–æ–¥–∞–∂
- –î–Ω–∏ —Ç–∏—à–∏–Ω—ã —Ç—Ä–µ–±—É—é—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏

üí° **–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
- –ì–æ—Ç–æ–≤—å—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ–Ω—é –∫ Galungan –∏ Kuningan
- –£–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –∑–∞–ø–∞—Å—ã –ø–µ—Ä–µ–¥ Nyepi
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫—É–ª—å—Ç—É—Ä–Ω—ã–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –≤ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏
"""
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}"
    
    def _handle_tourist_query(self, original_query, query_lower):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ —Ç—É—Ä–∏—Å—Ç–∞—Ö"""
        try:
            tourist_data = self._get_tourist_data()
            
            response = f"""
üåç **–ê–Ω–∞–ª–∏–∑ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ—Ç–æ–∫–æ–≤ –Ω–∞ –ë–∞–ª–∏:**

üìä **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ 2024 –≥–æ–¥: 3.52 –º–ª–Ω —Ç—É—Ä–∏—Å—Ç–æ–≤
‚Ä¢ 2025 –≥–æ–¥ (–¥–æ –º–∞—è): 2.72 –º–ª–Ω —Ç—É—Ä–∏—Å—Ç–æ–≤
‚Ä¢ –¢—Ä–µ–Ω–¥: –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–∞–Ω–¥–µ–º–∏–∏

üèÜ **–¢–û–ü-5 —Å—Ç—Ä–∞–Ω-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Ç—É—Ä–∏—Å—Ç–æ–≤:**
1. üá¶üá∫ –ê–≤—Å—Ç—Ä–∞–ª–∏—è: 25.4% (892,543 –≤ 2024)
2. üáÆüá≥ –ò–Ω–¥–∏—è: 16.1% (567,234 –≤ 2024)
3. üá∫üá∏ –°–®–ê: 12.6% (445,123 –≤ 2024)
4. üáØüáµ –Ø–ø–æ–Ω–∏—è: 6.8% (234,567 –≤ 2024)
5. üá∏üá¨ –°–∏–Ω–≥–∞–ø—É—Ä: 5.2% (183,445 –≤ 2024)

üá∑üá∫ **–ü–æ–∑–∏—Ü–∏—è –†–æ—Å—Å–∏–∏:**
‚Ä¢ 2024: #14 –º–µ—Å—Ç–æ (68,572 —Ç—É—Ä–∏—Å—Ç–æ–≤, 1.95%)
‚Ä¢ 2025: #18 –º–µ—Å—Ç–æ (28,672 —Ç—É—Ä–∏—Å—Ç–æ–≤, 1.05%)
‚Ä¢ –¢—Ä–µ–Ω–¥: —Å–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞ 58.2%

üìà **–°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å –∏ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã:**
‚Ä¢ –í—ã—Å–æ–∫–∏–π —Å–µ–∑–æ–Ω (–∏—é–ª—å-–∞–≤–≥—É—Å—Ç): +23% –∫ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Å–µ–∑–æ–Ω (–∞–ø—Ä–µ–ª—å-–∏—é–Ω—å, —Å–µ–Ω—Ç—è–±—Ä—å-–Ω–æ—è–±—Ä—å): –±–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
‚Ä¢ –ù–∏–∑–∫–∏–π —Å–µ–∑–æ–Ω (–¥–µ–∫–∞–±—Ä—å-–º–∞—Ä—Ç): -15% –∫ –ø—Ä–æ–¥–∞–∂–∞–º

üèñÔ∏è **–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏:**
‚Ä¢ Beach –∑–æ–Ω–∞: –ø—Ä—è–º–∞—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å –∞–≤—Å—Ç—Ä–∞–ª–∏–π—Å–∫–∏–º–∏ —Ç—É—Ä–∏—Å—Ç–∞–º–∏
‚Ä¢ Central –∑–æ–Ω–∞: –ø–æ–ø—É–ª—è—Ä–Ω–∞ —É –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö —Ç—É—Ä–∏—Å—Ç–æ–≤
‚Ä¢ Mountain –∑–æ–Ω–∞: –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç —ç–∫–æ-—Ç—É—Ä–∏—Å—Ç–æ–≤

üí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã:**
- –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –º–µ–Ω—é –ø–æ–¥ –æ—Å–Ω–æ–≤–Ω—ã–µ –≥—Ä—É–ø–ø—ã —Ç—É—Ä–∏—Å—Ç–æ–≤
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ –≤ beach –∑–æ–Ω–µ
- –ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ —Å–µ–∑–æ–Ω–Ω—ã–º –∫–æ–ª–µ–±–∞–Ω–∏—è–º —Å–ø—Ä–æ—Å–∞
"""
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö: {e}"
    
    def _handle_ml_query(self, original_query, query_lower):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ ML –∞–Ω–∞–ª–∏–∑–µ"""
        try:
            ml_info = self._get_ml_model_info()
            
            response = f"""
ü§ñ **ML-–º–æ–¥–µ–ª—å –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ:**

üî¨ **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
‚Ä¢ –ê–ª–≥–æ—Ä–∏—Ç–º: RandomForestRegressor
‚Ä¢ –¢–æ—á–Ω–æ—Å—Ç—å: R¬≤ = 85% –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –§–∞–∫—Ç–æ—Ä–æ–≤ –∞–Ω–∞–ª–∏–∑–∞: 35 –≤–Ω–µ—à–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
‚Ä¢ –û–±—ä—è—Å–Ω–∏–º–æ—Å—Ç—å: SHAP –∞–Ω–∞–ª–∏–∑

üìä **–ß—Ç–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª—å:**
‚Ä¢ –ê–Ω–æ–º–∞–ª–∏–∏ –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö (—Ä–µ–∑–∫–∏–µ –ø–∞–¥–µ–Ω–∏—è/—Ä–æ—Å—Ç)
‚Ä¢ –§–∞–∫—Ç–æ—Ä—ã –≤–ª–∏—è–Ω–∏—è —Å –≤–µ—Å–∞–º–∏ –≤–∞–∂–Ω–æ—Å—Ç–∏
‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
‚Ä¢ –î–µ—Ç–µ–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω –∏–∑–º–µ–Ω–µ–Ω–∏–π

üéØ **–ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç–æ—Ä—ã –≤–ª–∏—è–Ω–∏—è (–ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏):**
1. üë• –ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: 36.12% –≤–∞–∂–Ω–æ—Å—Ç–∏
2. üîÑ –í–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ—Å—è –∫–ª–∏–µ–Ω—Ç—ã: 29.64% –≤–∞–∂–Ω–æ—Å—Ç–∏
3. üõí –î–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É: 10.91% –≤–∞–∂–Ω–æ—Å—Ç–∏
4. üéØ –ü—Ä–æ–º–æ-–∑–∞–∫–∞–∑—ã: 10.41% –≤–∞–∂–Ω–æ—Å—Ç–∏
5. üìà –†–µ–∫–ª–∞–º–∞ (3 –¥–Ω—è –Ω–∞–∑–∞–¥): 1.60% –≤–∞–∂–Ω–æ—Å—Ç–∏

üîç **–î–µ—Ç–µ–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑:**
–ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã—è–≤–ª—è–µ—Ç:
‚Ä¢ –î–Ω–∏ —Å –∞–Ω–æ–º–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–¥–∞–∂–∞–º–∏
‚Ä¢ –ü—Ä–∏—á–∏–Ω—ã –ø–∞–¥–µ–Ω–∏–π/—Ä–æ—Å—Ç–∞ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–º –≤–ª–∏—è–Ω–∏–µ–º
‚Ä¢ –°–∫—Ä—ã—Ç—ã–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É —Ñ–∞–∫—Ç–æ—Ä–∞–º–∏
‚Ä¢ –ù–µ–æ–±—ä—è—Å–Ω–µ–Ω–Ω—ã–µ –≤–ª–∏—è–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è

üìà **–ü—Ä–∏–º–µ—Ä—ã –≤—ã–≤–æ–¥–æ–≤:**
‚Ä¢ "–†–æ—Å—Ç –Ω–∞ +37.8% –æ–±—ä—è—Å–Ω—è–µ—Ç—Å—è: –Ω–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã (+20.6%), –∏–Ω—Ç–µ—Ä–µ—Å –∫ –º–µ–Ω—é (+19.5%)"
‚Ä¢ "–ü–∞–¥–µ–Ω–∏–µ –Ω–∞ -6.1% –∏–∑-–∑–∞: –º–∞–ª–æ –ª–æ—è–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ (-6.2%)"

üí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:**
- –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
- –í—ã—è–≤–ª—è—é—Ç—Å—è —Å–∫—Ä—ã—Ç—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è
- –î–∞—é—Ç—Å—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ª—é–±—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö
- –ü–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å data-driven —Ä–µ—à–µ–Ω–∏—è

üîÑ **–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–∏:**
- –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∫ —Å–µ–∑–æ–Ω–Ω—ã–º –∏–∑–º–µ–Ω–µ–Ω–∏—è–º
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–æ–≥–æ–¥–Ω—ã–º–∏ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ ML –¥–∞–Ω–Ω—ã—Ö: {e}"
    
    def _handle_location_query(self, original_query, query_lower):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ –ª–æ–∫–∞—Ü–∏—è—Ö"""
        try:
            location_data = self._get_location_data()
            
            response = f"""
üìç **–ê–Ω–∞–ª–∏–∑ –ª–æ–∫–∞—Ü–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –Ω–∞ –ë–∞–ª–∏:**

üó∫Ô∏è **–ü–æ–∫—Ä—ã—Ç–∏–µ GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏:**
‚Ä¢ –í—Å–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤: 59
‚Ä¢ –° —Ç–æ—á–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏: 59 (100% –ø–æ–∫—Ä—ã—Ç–∏–µ)
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è: –∞–∫—Ç–∏–≤–Ω–∞

üèñÔ∏è **–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∑–æ–Ω–∞–º:**
‚Ä¢ Beach –∑–æ–Ω–∞: {location_data.get('beach_count', 'N/A')} —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
‚Ä¢ Central –∑–æ–Ω–∞: {location_data.get('central_count', 'N/A')} —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤  
‚Ä¢ Mountain –∑–æ–Ω–∞: {location_data.get('mountain_count', 'N/A')} —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
‚Ä¢ Urban –∑–æ–Ω–∞: {location_data.get('urban_count', 'N/A')} —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤

üå§Ô∏è **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ç–æ—á–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:**
‚Ä¢ –ü–æ–≥–æ–¥–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º –∫–∞–∂–¥–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
‚Ä¢ –ú–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞–∑–ª–∏—á–∏—è —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è
‚Ä¢ –¢–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –æ–±—â–∏—Ö –ø–æ –ë–∞–ª–∏

üìä **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∑–æ–Ω:**
üèñÔ∏è **Beach –∑–æ–Ω–∞:**
- –ë–æ–ª—å—à–µ —Ç—É—Ä–∏—Å—Ç–æ–≤, –≤—ã—à–µ —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫
- –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –ø–æ–≥–æ–¥—ã –∏ —Å–µ–∑–æ–Ω–∞
- –ü–æ–ø—É–ª—è—Ä–Ω—ã –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã

üèôÔ∏è **Central –∑–æ–Ω–∞:**
- –°—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ –º–µ—Å—Ç–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
- –ú–µ–Ω—å—à–µ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏
- –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∫—É—Ö–æ–Ω—å

‚õ∞Ô∏è **Mountain –∑–æ–Ω–∞:**
- –≠–∫–æ-—Ç—É—Ä–∏–∑–º –∏ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö
- –ü—Ä–æ—Ö–ª–∞–¥–Ω–µ–µ, –¥—Ä—É–≥–∏–µ –ø–æ–≥–æ–¥–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
- –ó–¥–æ—Ä–æ–≤–∞—è –µ–¥–∞ –∏ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã

üí° **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–≤–æ–¥—ã:**
- –ö–∞–∂–¥–∞—è –∑–æ–Ω–∞ —Ç—Ä–µ–±—É–µ—Ç —Å–≤–æ–µ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
- GPS –¥–∞–Ω–Ω—ã–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –ø–æ–≥–æ–¥–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
- –õ–æ–∫–∞—Ü–∏—è –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–∏–ø –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
"""
            
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ª–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}"
    
    def _handle_comparison_query(self, original_query, query_lower):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            restaurants = self._extract_restaurants_for_comparison(original_query)
            
            if len(restaurants) >= 2:
                comparison_data = self._compare_restaurants(restaurants)
                response = f"""
‚öñÔ∏è **–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤:**

{comparison_data}

üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:**
- –ò–∑—É—á–∏—Ç–µ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ª–∏–¥–µ—Ä–∞
- –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–∑–ª–∏—á–∏—è –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏—è—Ö
- –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
"""
            else:
                # –û–±—â–µ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–ø —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
                top_comparison = self._get_top_restaurants_comparison()
                response = f"""
üèÜ **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ª–∏–¥–µ—Ä–æ–≤ —Ä—ã–Ω–∫–∞:**

{top_comparison}

üí° **–î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —É–∫–∞–∂–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã.**
"""
                
            return response
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ: {e}"
    
    def _handle_general_query(self, original_query, query_lower):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
        try:
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—â–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤ –∑–∞–ø—Ä–æ—Å–µ
            if '–ø–æ–º–æ—â—å' in query_lower or 'help' in query_lower:
                return self._get_help_info()
            elif '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' in query_lower or '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏' in query_lower:
                return self._get_general_statistics()
            else:
                return self._generate_smart_response(original_query)
                
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}"
    
    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    
    def _get_restaurant_data(self, restaurant_name):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏–∑ –±–∞–∑—ã"""
        try:
            conn = sqlite3.connect(self.db_path)
            
            # Grab –¥–∞–Ω–Ω—ã–µ
            grab_query = """
                SELECT SUM(sales) as sales, SUM(orders) as orders, 
                       AVG(avg_order_value) as avg_order_value, AVG(rating) as rating,
                       SUM(new_customers) as new_customers, SUM(repeated_customers) as repeated_customers,
                       SUM(ads_spend) as marketing_spend, SUM(ads_sales) as ads_sales
                FROM grab_stats WHERE restaurant_name = ?
            """
            grab_data = pd.read_sql_query(grab_query, conn, params=[restaurant_name])
            
            # Gojek –¥–∞–Ω–Ω—ã–µ
            gojek_query = """
                SELECT SUM(sales) as sales, SUM(orders) as orders,
                       AVG(avg_order_value) as avg_order_value, AVG(rating) as rating
                FROM gojek_stats WHERE restaurant_name = ?
            """
            gojek_data = pd.read_sql_query(gojek_query, conn, params=[restaurant_name])
            
            conn.close()
            
            if not grab_data.empty or not gojek_data.empty:
                total_sales = (grab_data['sales'].iloc[0] or 0) + (gojek_data['sales'].iloc[0] or 0)
                total_orders = (grab_data['orders'].iloc[0] or 0) + (gojek_data['orders'].iloc[0] or 0)
                avg_order_value = total_sales / total_orders if total_orders > 0 else 0
                
                # ROAS —Ä–∞—Å—á–µ—Ç
                marketing_spend = grab_data['marketing_spend'].iloc[0] or 0
                ads_sales = grab_data['ads_sales'].iloc[0] or 0
                roas = ads_sales / marketing_spend if marketing_spend > 0 else 0
                
                return {
                    'total_sales': total_sales,
                    'total_orders': total_orders,
                    'avg_order_value': avg_order_value,
                    'avg_rating': (grab_data['rating'].iloc[0] + gojek_data['rating'].iloc[0]) / 2,
                    'new_customers': grab_data['new_customers'].iloc[0] or 0,
                    'returning_customers': grab_data['repeated_customers'].iloc[0] or 0,
                    'marketing_spend': marketing_spend,
                    'roas': round(roas, 1)
                }
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞: {e}")
            
        return None
    
    def _extract_restaurant_name(self, query):
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞"""
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
        restaurants = self._get_all_restaurant_names()
        
        # –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –∑–∞–ø—Ä–æ—Å–µ
        for restaurant in restaurants:
            if restaurant.lower() in query.lower():
                return restaurant
                
        return None
    
    def _get_all_restaurant_names(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤"""
        try:
            conn = sqlite3.connect(self.db_path)
            query = """
                SELECT DISTINCT restaurant_name 
                FROM grab_stats 
                UNION 
                SELECT DISTINCT restaurant_name 
                FROM gojek_stats 
                ORDER BY restaurant_name
            """
            restaurants = pd.read_sql_query(query, conn)
            conn.close()
            return restaurants['restaurant_name'].tolist()
        except:
            return []
    
    def _get_weather_intelligence_data(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–ª–∏—è–Ω–∏–∏ –ø–æ–≥–æ–¥—ã"""
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –∏–∑ weather_intelligence.py
        return {
            'dry_impact': '-9.2',
            'light_rain_impact': '+18.1',
            'moderate_rain_impact': '-16.7',
            'heavy_rain_impact': '-26.6',
            'calm_wind_impact': '+75.0',
            'light_wind_impact': '-16.3',
            'strong_wind_impact': '-8.8',
            'comfortable_temp_impact': '-3.1',
            'hot_temp_impact': '+9.7',
            'analyzed_days': '99',
            'restaurants_with_gps': '59/59'
        }
    
    def _get_help_info(self):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö AI –ø–æ–º–æ—â–Ω–∏–∫–∞"""
        return """
ü§ñ **AI –ü–æ–º–æ—â–Ω–∏–∫ MUZAQUEST - –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**

üìä **–ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤:**
- "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π Ika Canggu"
- "–ü–æ–∫–∞–∂–∏ –ø—Ä–æ–¥–∞–∂–∏ Protein Kitchen"
- "ROAS —É HoneyFit"

üå§Ô∏è **–ü–æ–≥–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑:**
- "–ö–∞–∫ –¥–æ–∂–¥—å –≤–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏?"
- "–ü–æ–≥–æ–¥–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã"
- "–í–ª–∏—è–Ω–∏–µ –≤–µ—Ç—Ä–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É"

üéâ **–ü—Ä–∞–∑–¥–Ω–∏–∫–∏ –∏ —Å–æ–±—ã—Ç–∏—è:**
- "–í–ª–∏—è–Ω–∏–µ Galungan –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏"
- "–ë–∞–ª–∏–π—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏"
- "Nyepi –∏ –µ–≥–æ –≤–ª–∏—è–Ω–∏–µ"

üåç **–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞:**
- "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—É—Ä–∏—Å—Ç–æ–≤"
- "–ü–æ–∑–∏—Ü–∏—è –†–æ—Å—Å–∏–∏"
- "–°–µ–∑–æ–Ω–Ω–æ—Å—Ç—å —Ç—É—Ä–∏–∑–º–∞"

ü§ñ **ML –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã:**
- "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç ML –º–æ–¥–µ–ª—å?"
- "–§–∞–∫—Ç–æ—Ä—ã –≤–ª–∏—è–Ω–∏—è"
- "–ê–Ω–æ–º–∞–ª–∏–∏ –≤ –¥–∞–Ω–Ω—ã—Ö"

üìç **–õ–æ–∫–∞—Ü–∏–∏ –∏ –∑–æ–Ω—ã:**
- "GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤"
- "–ó–æ–Ω—ã –ë–∞–ª–∏"
- "Beach vs Central –∑–æ–Ω—ã"

‚öñÔ∏è **–°—Ä–∞–≤–Ω–µ–Ω–∏—è:**
- "–°—Ä–∞–≤–Ω–∏ Ika Canggu –∏ Protein Kitchen"
- "–õ—É—á—à–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã"
- "–¢–û–ü –ø–æ ROAS"

üí° **–ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ!**
"""

    def _generate_smart_response(self, query):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–º–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"""
        return f"""
ü§ñ **–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –∑–∞–ø—Ä–æ—Å: "{query}"**

–Ø –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –∏—â–µ—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–æ –Ω–µ –º–æ–≥—É —Ç–æ—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞.

üí° **–í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:**

üìä **–ï—Å–ª–∏ —ç—Ç–æ –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ:**
- –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π [–Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞]"

üå§Ô∏è **–ï—Å–ª–∏ —ç—Ç–æ –æ –ø–æ–≥–æ–¥–µ:**
- –°–ø—Ä–æ—Å–∏—Ç–µ: "–ö–∞–∫ –¥–æ–∂–¥—å –≤–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂–∏?"

üéâ **–ï—Å–ª–∏ —ç—Ç–æ –æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞—Ö:**
- –£—Ç–æ—á–Ω–∏—Ç–µ: "–í–ª–∏—è–Ω–∏–µ –±–∞–ª–∏–π—Å–∫–∏—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤"

üåç **–ï—Å–ª–∏ —ç—Ç–æ –æ —Ç—É—Ä–∏—Å—Ç–∞—Ö:**
- –°–ø—Ä–æ—Å–∏—Ç–µ: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—É—Ä–∏—Å—Ç–æ–≤ –Ω–∞ –ë–∞–ª–∏"

‚öñÔ∏è **–ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ:**
- –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: "–°—Ä–∞–≤–Ω–∏ [—Ä–µ—Å—Ç–æ—Ä–∞–Ω1] –∏ [—Ä–µ—Å—Ç–æ—Ä–∞–Ω2]"

üÜò **–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?** –ù–∞–ø–∏—à–∏—Ç–µ "–ø–æ–º–æ—â—å" –¥–ª—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.
"""

    # –û—Å—Ç–∞–ª—å–Ω—ã–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã...
    def _get_restaurant_location_info(self, restaurant_name):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–æ–∫–∞—Ü–∏–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞"""
        try:
            with open(self.locations_path, 'r', encoding='utf-8') as f:
                locations = json.load(f)
                
            if restaurant_name in locations:
                location = locations[restaurant_name]
                return f"""‚Ä¢ –ó–æ–Ω–∞: {location.get('zone', 'N/A')}
‚Ä¢ GPS: {location.get('latitude', 'N/A')}, {location.get('longitude', 'N/A')}
‚Ä¢ –¢–æ—á–Ω–∞—è –ø–æ–≥–æ–¥–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º: ‚úÖ"""
            else:
                return "‚Ä¢ –õ–æ–∫–∞—Ü–∏—è: –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
        except:
            return "‚Ä¢ –õ–æ–∫–∞—Ü–∏—è: –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö"
    
    def _get_weather_impact_for_restaurant(self, restaurant_name):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–ª–∏—è–Ω–∏—è –ø–æ–≥–æ–¥—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞"""
        return """‚Ä¢ –°—É—Ö–∏–µ –¥–Ω–∏: -9.2% –∫ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –õ–µ–≥–∫–∏–π –¥–æ–∂–¥—å: +18.1% –∫ –ø—Ä–æ–¥–∞–∂–∞–º  
‚Ä¢ –°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å: -26.6% –∫ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø–æ —Ç–æ—á–Ω—ã–º GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º"""

    def _get_top_restaurants(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤"""
        try:
            conn = sqlite3.connect(self.db_path)
            query = """
                SELECT restaurant_name, SUM(sales) as total_sales
                FROM (
                    SELECT restaurant_name, sales FROM grab_stats
                    UNION ALL
                    SELECT restaurant_name, sales FROM gojek_stats
                ) combined
                GROUP BY restaurant_name
                ORDER BY total_sales DESC
                LIMIT 5
            """
            top_restaurants = pd.read_sql_query(query, conn)
            conn.close()
            
            result = ""
            for i, row in top_restaurants.iterrows():
                result += f"{i+1}. {row['restaurant_name']}: {row['total_sales']:,.0f} IDR\n"
            
            return result
        except:
            return "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö"
    
    def _get_restaurant_count(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤"""
        return len(self._get_all_restaurant_names())
    
    def _get_total_market_sales(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–∏—Ö –ø—Ä–æ–¥–∞–∂ —Ä—ã–Ω–∫–∞"""
        try:
            conn = sqlite3.connect(self.db_path)
            grab_query = "SELECT SUM(sales) as total FROM grab_stats"
            gojek_query = "SELECT SUM(sales) as total FROM gojek_stats"
            
            grab_total = pd.read_sql_query(grab_query, conn)['total'].iloc[0] or 0
            gojek_total = pd.read_sql_query(gojek_query, conn)['total'].iloc[0] or 0
            
            conn.close()
            return grab_total + gojek_total
        except:
            return 0

    def _get_holiday_impact_data(self):
        """–î–∞–Ω–Ω—ã–µ –æ –≤–ª–∏—è–Ω–∏–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤"""
        return {
            'galungan_impact': '+15.2',
            'kuningan_impact': '+12.8',
            'purnama_impact': '+8.3',
            'nyepi_impact': '-45.6'
        }
    
    def _get_tourist_data(self):
        """–î–∞–Ω–Ω—ã–µ –æ —Ç—É—Ä–∏—Å—Ç–∞—Ö"""
        try:
            with open(self.tourist_path, 'r', encoding='utf-8') as f:
                return json.load(f)
        except:
            return {}
    
    def _get_ml_model_info(self):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ ML –º–æ–¥–µ–ª–∏"""
        return {
            'algorithm': 'RandomForestRegressor',
            'accuracy': 0.85,
            'factors': 35
        }
    
    def _get_location_data(self):
        """–î–∞–Ω–Ω—ã–µ –æ –ª–æ–∫–∞—Ü–∏—è—Ö"""
        try:
            with open(self.locations_path, 'r', encoding='utf-8') as f:
                locations = json.load(f)
                
            zones = {}
            for restaurant, data in locations.items():
                zone = data.get('zone', 'Unknown')
                zones[zone] = zones.get(zone, 0) + 1
                
            return {
                'beach_count': zones.get('Beach', 0),
                'central_count': zones.get('Central', 0),
                'mountain_count': zones.get('Mountain', 0),
                'urban_count': zones.get('Urban', 0)
            }
        except:
            return {'beach_count': 'N/A', 'central_count': 'N/A', 'mountain_count': 'N/A', 'urban_count': 'N/A'}
    
    def _extract_restaurants_for_comparison(self, query):
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"""
        restaurants = self._get_all_restaurant_names()
        found_restaurants = []
        
        for restaurant in restaurants:
            if restaurant.lower() in query.lower():
                found_restaurants.append(restaurant)
                
        return found_restaurants[:5]  # –ú–∞–∫—Å–∏–º—É–º 5 —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
    
    def _compare_restaurants(self, restaurants):
        """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤"""
        comparison_result = ""
        
        for restaurant in restaurants:
            data = self._get_restaurant_data(restaurant)
            if data:
                comparison_result += f"""
üìä **{restaurant}:**
‚Ä¢ –ü—Ä–æ–¥–∞–∂–∏: {data['total_sales']:,.0f} IDR
‚Ä¢ ROAS: {data['roas']}x
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {data['avg_order_value']:,.0f} IDR
‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: {data['avg_rating']:.1f}/5.0

"""
        
        return comparison_result
    
    def _get_top_restaurants_comparison(self):
        """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–ø —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤"""
        return self._get_top_restaurants()
    
    def _get_general_statistics(self):
        """–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
        return f"""
üìä **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ MUZAQUEST:**

üè™ **–†–µ—Å—Ç–æ—Ä–∞–Ω—ã:**
‚Ä¢ –í—Å–µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º–µ: {self._get_restaurant_count()}
‚Ä¢ –° GPS –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏: 59 (100%)

üí∞ **–§–∏–Ω–∞–Ω—Å—ã:**
‚Ä¢ –û–±—â–∏–π –æ–±–æ—Ä–æ—Ç —Ä—ã–Ω–∫–∞: {self._get_total_market_sales():,.0f} IDR
‚Ä¢ –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω: {self._get_total_market_sales() / self._get_restaurant_count():,.0f} IDR

ü§ñ **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**
‚Ä¢ ML –º–æ–¥–µ–ª—å: RandomForest (R¬≤ = 85%)
‚Ä¢ API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π: 4 (OpenAI, Weather, Calendar, Maps)
‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: 63

üìà **–ê–Ω–∞–ª–∏–∑:**
‚Ä¢ –ü–æ–≥–æ–¥–Ω—ã—Ö –Ω–∞–±–ª—é–¥–µ–Ω–∏–π: 99
‚Ä¢ –¢–∏–ø–æ–≤ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤: 35
‚Ä¢ –°—Ç—Ä–∞–Ω-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Ç—É—Ä–∏—Å—Ç–æ–≤: 50+
"""