#!/bin/bash

# üîÑ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–• MUZAQUEST
# ==================================================
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å backup'–æ–º

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ù–ê–°–¢–†–û–ô–¢–ï –ü–û–î –°–ï–ë–Ø!)
PROJECT_DIR="/path/to/muzaquest-project"
NEW_DB_PATH="/path/to/updated/database.sqlite"
BACKUP_DIR="$PROJECT_DIR/backups"
LOG_FILE="$PROJECT_DIR/update.log"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –±—ç–∫–∞–ø–æ–≤
mkdir -p "$BACKUP_DIR"

log "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
cd "$PROJECT_DIR" || {
    log "‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ $PROJECT_DIR"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–æ–≤–∞—è –±–∞–∑–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "$NEW_DB_PATH" ]; then
    log "‚ùå –û—à–∏–±–∫–∞: –ù–æ–≤–∞—è –±–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –ø—É—Ç–∏ $NEW_DB_PATH"
    exit 1
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
log "‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
pkill -f "python.*web_app_optimized.py"
pkill -f "streamlit.*web_app_optimized.py"
sleep 5

# –°–æ–∑–¥–∞–µ–º backup —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="$BACKUP_DIR/database_backup_$TIMESTAMP.sqlite"

if [ -f "database.sqlite" ]; then
    log "üíæ –°–æ–∑–¥–∞–µ–º backup: $BACKUP_FILE"
    cp database.sqlite "$BACKUP_FILE"
    
    if [ $? -eq 0 ]; then
        log "‚úÖ Backup —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        log "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è backup!"
        exit 1
    fi
else
    log "‚ö†Ô∏è –°—Ç–∞—Ä–∞—è –±–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–π –±–∞–∑—ã
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–π –±–∞–∑—ã..."
RESTAURANT_COUNT=$(sqlite3 "$NEW_DB_PATH" "SELECT COUNT(*) FROM restaurants;" 2>/dev/null)

if [ $? -eq 0 ] && [ "$RESTAURANT_COUNT" -gt 0 ]; then
    log "‚úÖ –ù–æ–≤–∞—è –±–∞–∑–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞. –†–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤: $RESTAURANT_COUNT"
else
    log "‚ùå –û—à–∏–±–∫–∞: –ù–æ–≤–∞—è –±–∞–∑–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞!"
    exit 1
fi

# –ó–∞–º–µ–Ω—è–µ–º –±–∞–∑—É
log "üîÑ –ó–∞–º–µ–Ω—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
cp "$NEW_DB_PATH" ./database.sqlite

if [ $? -eq 0 ]; then
    log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
else
    log "‚ùå –û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã –±–∞–∑—ã! –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backup..."
    
    if [ -f "$BACKUP_FILE" ]; then
        cp "$BACKUP_FILE" ./database.sqlite
        log "‚úÖ Backup –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    exit 1
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –±–∞–∑—ã
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –±–∞–∑—É..."
FINAL_COUNT=$(sqlite3 "./database.sqlite" "SELECT COUNT(*) FROM restaurants;" 2>/dev/null)

if [ $? -eq 0 ] && [ "$FINAL_COUNT" -gt 0 ]; then
    log "‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞. –†–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤: $FINAL_COUNT"
else
    log "‚ùå –û—à–∏–±–∫–∞: –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –±–∞–∑–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backup
    if [ -f "$BACKUP_FILE" ]; then
        cp "$BACKUP_FILE" ./database.sqlite
        log "‚úÖ Backup –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    exit 1
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
log "üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."

# –í—ã–±–∏—Ä–∞–µ–º –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞
if command -v streamlit &> /dev/null; then
    # Streamlit –¥–æ—Å—Ç—É–ø–µ–Ω
    nohup streamlit run web_app_optimized.py --server.port 8501 > app.log 2>&1 &
    log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ Streamlit –Ω–∞ –ø–æ—Ä—Ç—É 8501"
else
    # –û–±—ã—á–Ω—ã–π Python
    nohup python web_app_optimized.py > app.log 2>&1 &
    log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ Python"
fi

# –ñ–¥–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å
sleep 10

if pgrep -f "web_app_optimized.py" > /dev/null; then
    log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ"
else
    log "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ app.log"
fi

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10)
log "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö backup'–æ–≤..."
cd "$BACKUP_DIR"
ls -t database_backup_*.sqlite | tail -n +11 | xargs -r rm
REMAINING_BACKUPS=$(ls database_backup_*.sqlite 2>/dev/null | wc -l)
log "üìÅ –û—Å—Ç–∞–≤–ª–µ–Ω–æ backup'–æ–≤: $REMAINING_BACKUPS"

# –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞
log "üéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
log "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
log "   ‚Ä¢ –í—Ä–µ–º—è: $TIMESTAMP"
log "   ‚Ä¢ –†–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ –Ω–æ–≤–æ–π –±–∞–∑–µ: $FINAL_COUNT"
log "   ‚Ä¢ Backup —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $BACKUP_FILE"
log "   ‚Ä¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ"
log "=================================="

exit 0